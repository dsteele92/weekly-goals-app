{"ast":null,"code":"var _jsxFileName = \"/Users/daltonsteele/Coding/weekly-goals-app/client/src/components/presentational/schedule/Schedule.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Style from './schedule.module.scss';\nimport { GoalCalendarBlock } from 'components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Schedule() {\n  _s();\n\n  const [goalsList, setGoalsList] = useState([]);\n  const [allCategories, setAllCategories] = useState([]);\n  useEffect(() => {\n    let cancel = false;\n\n    async function getGoals() {\n      try {\n        const goals = await axios.get('http://localhost:10000/goals');\n        if (cancel) return;\n\n        if (JSON.stringify(goalsList) !== JSON.stringify(goals.data)) {\n          setGoalsList(goals.data);\n        }\n\n        console.log(goals.data);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    if (allCategories.length === 0) {\n      getGoals();\n    }\n\n    return () => {\n      cancel = true;\n    };\n  });\n  useEffect(() => {\n    let cancel = false;\n\n    async function getCategories() {\n      try {\n        const categories = await axios.get('http://localhost:10000/category');\n        setAllCategories(categories.data);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    if (allCategories.length === 0) {\n      getCategories();\n    }\n\n    return () => {\n      cancel = true;\n    };\n  }); // async function getGoals() {\n  // \ttry {\n  // \t\tconst goals = await axios.get('http://localhost:10000/goals');\n  // \t\tif (JSON.stringify(goalsList) !== JSON.stringify(goals.data)) {\n  // \t\t\tsetGoalsList(goals.data);\n  // \t\t}\n  // \t\tconsole.log(goals.data);\n  // \t} catch (e) {\n  // \t\tconsole.log(e);\n  // \t}\n  // }\n  // async function getCategories() {\n  // \ttry {\n  // \t\tconst categories = await axios.get('http://localhost:10000/category');\n  // \t\tsetAllCategories(categories.data);\n  // \t} catch (e) {\n  // \t\tconsole.log(e);\n  // \t}\n  // }\n  // // this will run the axios request on the first render of the component\n  // if (allCategories.length === 0) {\n  // \tgetGoals();\n  // \tgetCategories();\n  // }\n\n  let goalDisplayBlocks = [];\n\n  for (const goal in goalsList) {\n    const count = goalsList[goal].timesPerWeek;\n\n    for (let i = 0; i < count; i++) {\n      goalDisplayBlocks.push(goalsList[goal]);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: goalDisplayBlocks.map((goal, index) => /*#__PURE__*/_jsxDEV(GoalCalendarBlock, {\n      goal: goal,\n      category: allCategories.filter(cat => cat.name === goal.category)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Schedule, \"0Ple7bc7P2KyfBwuCNj6BRA4w1s=\");\n\n_c = Schedule;\n\nvar _c;\n\n$RefreshReg$(_c, \"Schedule\");","map":{"version":3,"names":["React","useState","useEffect","axios","Style","GoalCalendarBlock","Schedule","goalsList","setGoalsList","allCategories","setAllCategories","cancel","getGoals","goals","get","JSON","stringify","data","console","log","e","length","getCategories","categories","goalDisplayBlocks","goal","count","timesPerWeek","i","push","map","index","filter","cat","name","category"],"sources":["/Users/daltonsteele/Coding/weekly-goals-app/client/src/components/presentational/schedule/Schedule.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Style from './schedule.module.scss';\n\nimport { GoalCalendarBlock } from 'components';\n\nexport default function Schedule() {\n\tconst [goalsList, setGoalsList] = useState([]);\n\tconst [allCategories, setAllCategories] = useState([]);\n\n\tuseEffect(() => {\n\t\tlet cancel = false;\n\t\tasync function getGoals() {\n\t\t\ttry {\n\t\t\t\tconst goals = await axios.get('http://localhost:10000/goals');\n\t\t\t\tif (cancel) return;\n\t\t\t\tif (JSON.stringify(goalsList) !== JSON.stringify(goals.data)) {\n\t\t\t\t\tsetGoalsList(goals.data);\n\t\t\t\t}\n\t\t\t\tconsole.log(goals.data);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(e);\n\t\t\t}\n\t\t}\n\n\t\tif (allCategories.length === 0) {\n\t\t\tgetGoals();\n\t\t}\n\n\t\treturn () => {\n\t\t\tcancel = true;\n\t\t};\n\t});\n\n\tuseEffect(() => {\n\t\tlet cancel = false;\n\t\tasync function getCategories() {\n\t\t\ttry {\n\t\t\t\tconst categories = await axios.get('http://localhost:10000/category');\n\t\t\t\tsetAllCategories(categories.data);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(e);\n\t\t\t}\n\t\t}\n\n\t\tif (allCategories.length === 0) {\n\t\t\tgetCategories();\n\t\t}\n\n\t\treturn () => {\n\t\t\tcancel = true;\n\t\t};\n\t});\n\n\t// async function getGoals() {\n\t// \ttry {\n\t// \t\tconst goals = await axios.get('http://localhost:10000/goals');\n\t// \t\tif (JSON.stringify(goalsList) !== JSON.stringify(goals.data)) {\n\t// \t\t\tsetGoalsList(goals.data);\n\t// \t\t}\n\t// \t\tconsole.log(goals.data);\n\t// \t} catch (e) {\n\t// \t\tconsole.log(e);\n\t// \t}\n\t// }\n\n\t// async function getCategories() {\n\t// \ttry {\n\t// \t\tconst categories = await axios.get('http://localhost:10000/category');\n\t// \t\tsetAllCategories(categories.data);\n\t// \t} catch (e) {\n\t// \t\tconsole.log(e);\n\t// \t}\n\t// }\n\n\t// // this will run the axios request on the first render of the component\n\t// if (allCategories.length === 0) {\n\t// \tgetGoals();\n\t// \tgetCategories();\n\t// }\n\n\tlet goalDisplayBlocks = [];\n\n\tfor (const goal in goalsList) {\n\t\tconst count = goalsList[goal].timesPerWeek;\n\t\tfor (let i = 0; i < count; i++) {\n\t\t\tgoalDisplayBlocks.push(goalsList[goal]);\n\t\t}\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t{goalDisplayBlocks.map((goal, index) => (\n\t\t\t\t<GoalCalendarBlock\n\t\t\t\t\tkey={index}\n\t\t\t\t\tgoal={goal}\n\t\t\t\t\tcategory={allCategories.filter((cat) => cat.name === goal.category)}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</div>\n\t);\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AAEA,SAASC,iBAAT,QAAkC,YAAlC;;AAEA,eAAe,SAASC,QAAT,GAAoB;EAAA;;EAClC,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,EAAD,CAAlD;EAEAC,SAAS,CAAC,MAAM;IACf,IAAIS,MAAM,GAAG,KAAb;;IACA,eAAeC,QAAf,GAA0B;MACzB,IAAI;QACH,MAAMC,KAAK,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAU,8BAAV,CAApB;QACA,IAAIH,MAAJ,EAAY;;QACZ,IAAII,IAAI,CAACC,SAAL,CAAeT,SAAf,MAA8BQ,IAAI,CAACC,SAAL,CAAeH,KAAK,CAACI,IAArB,CAAlC,EAA8D;UAC7DT,YAAY,CAACK,KAAK,CAACI,IAAP,CAAZ;QACA;;QACDC,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACI,IAAlB;MACA,CAPD,CAOE,OAAOG,CAAP,EAAU;QACXF,OAAO,CAACC,GAAR,CAAYC,CAAZ;MACA;IACD;;IAED,IAAIX,aAAa,CAACY,MAAd,KAAyB,CAA7B,EAAgC;MAC/BT,QAAQ;IACR;;IAED,OAAO,MAAM;MACZD,MAAM,GAAG,IAAT;IACA,CAFD;EAGA,CAtBQ,CAAT;EAwBAT,SAAS,CAAC,MAAM;IACf,IAAIS,MAAM,GAAG,KAAb;;IACA,eAAeW,aAAf,GAA+B;MAC9B,IAAI;QACH,MAAMC,UAAU,GAAG,MAAMpB,KAAK,CAACW,GAAN,CAAU,iCAAV,CAAzB;QACAJ,gBAAgB,CAACa,UAAU,CAACN,IAAZ,CAAhB;MACA,CAHD,CAGE,OAAOG,CAAP,EAAU;QACXF,OAAO,CAACC,GAAR,CAAYC,CAAZ;MACA;IACD;;IAED,IAAIX,aAAa,CAACY,MAAd,KAAyB,CAA7B,EAAgC;MAC/BC,aAAa;IACb;;IAED,OAAO,MAAM;MACZX,MAAM,GAAG,IAAT;IACA,CAFD;EAGA,CAlBQ,CAAT,CA5BkC,CAgDlC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;;EAEA,IAAIa,iBAAiB,GAAG,EAAxB;;EAEA,KAAK,MAAMC,IAAX,IAAmBlB,SAAnB,EAA8B;IAC7B,MAAMmB,KAAK,GAAGnB,SAAS,CAACkB,IAAD,CAAT,CAAgBE,YAA9B;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAApB,EAA2BE,CAAC,EAA5B,EAAgC;MAC/BJ,iBAAiB,CAACK,IAAlB,CAAuBtB,SAAS,CAACkB,IAAD,CAAhC;IACA;EACD;;EAED,oBACC;IAAA,UACED,iBAAiB,CAACM,GAAlB,CAAsB,CAACL,IAAD,EAAOM,KAAP,kBACtB,QAAC,iBAAD;MAEC,IAAI,EAAEN,IAFP;MAGC,QAAQ,EAAEhB,aAAa,CAACuB,MAAd,CAAsBC,GAAD,IAASA,GAAG,CAACC,IAAJ,KAAaT,IAAI,CAACU,QAAhD;IAHX,GACMJ,KADN;MAAA;MAAA;MAAA;IAAA,QADA;EADF;IAAA;IAAA;IAAA;EAAA,QADD;AAWA;;GA/FuBzB,Q;;KAAAA,Q"},"metadata":{},"sourceType":"module"}