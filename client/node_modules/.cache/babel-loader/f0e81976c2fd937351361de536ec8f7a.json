{"ast":null,"code":"var _jsxFileName = \"/Users/daltonsteele/Coding/weekly-goals-app/client/src/components/presentational/schedule/Schedule.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Style from './schedule.module.scss';\nimport { GoalCalendarBlock } from 'components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Schedule() {\n  _s();\n\n  const [goalsList, setGoalsList] = useState([]);\n  const [allCategories, setAllCategories] = useState([]);\n\n  async function getGoals() {\n    try {\n      const goals = await axios.get('http://localhost:10000/goals');\n\n      if (JSON.stringify(goalsList) !== JSON.stringify(goals.data)) {\n        setGoalsList(goals.data);\n      }\n\n      console.log(goals.data);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  async function getCategories() {\n    try {\n      const categories = await axios.get('http://localhost:10000/category');\n      setAllCategories(categories.data);\n    } catch (e) {\n      console.log(e);\n    }\n  } // this will run the axios request on the first render of the component\n\n\n  if (allCategories.length === 0) {\n    getGoals();\n    getCategories();\n  }\n\n  let goalDisplayBlocks = [];\n\n  for (const goal in goalsList) {\n    const count = goalsList[goal].timesPerWeek;\n\n    for (let i = 0; i < count; i++) {\n      goalDisplayBlocks.push(goalsList[goal]);\n      console.log(i);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: goalDisplayBlocks.map((goal, index) => /*#__PURE__*/_jsxDEV(GoalCalendarBlock, {\n      goal: goal,\n      category: allCategories.filter(cat => cat.name === goal.category)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Schedule, \"YH90xi6RapTkJid7Mye2wzkTI08=\");\n\n_c = Schedule;\n\nvar _c;\n\n$RefreshReg$(_c, \"Schedule\");","map":{"version":3,"names":["React","useState","axios","Style","GoalCalendarBlock","Schedule","goalsList","setGoalsList","allCategories","setAllCategories","getGoals","goals","get","JSON","stringify","data","console","log","e","getCategories","categories","length","goalDisplayBlocks","goal","count","timesPerWeek","i","push","map","index","filter","cat","name","category"],"sources":["/Users/daltonsteele/Coding/weekly-goals-app/client/src/components/presentational/schedule/Schedule.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport Style from './schedule.module.scss';\n\nimport { GoalCalendarBlock } from 'components';\n\nexport default function Schedule() {\n\tconst [goalsList, setGoalsList] = useState([]);\n\tconst [allCategories, setAllCategories] = useState([]);\n\n\tasync function getGoals() {\n\t\ttry {\n\t\t\tconst goals = await axios.get('http://localhost:10000/goals');\n\t\t\tif (JSON.stringify(goalsList) !== JSON.stringify(goals.data)) {\n\t\t\t\tsetGoalsList(goals.data);\n\t\t\t}\n\t\t\tconsole.log(goals.data);\n\t\t} catch (e) {\n\t\t\tconsole.log(e);\n\t\t}\n\t}\n\n\tasync function getCategories() {\n\t\ttry {\n\t\t\tconst categories = await axios.get('http://localhost:10000/category');\n\t\t\tsetAllCategories(categories.data);\n\t\t} catch (e) {\n\t\t\tconsole.log(e);\n\t\t}\n\t}\n\n\t// this will run the axios request on the first render of the component\n\tif (allCategories.length === 0) {\n\t\tgetGoals();\n\t\tgetCategories();\n\t}\n\n\tlet goalDisplayBlocks = [];\n\n\tfor (const goal in goalsList) {\n\t\tconst count = goalsList[goal].timesPerWeek;\n\t\tfor (let i = 0; i < count; i++) {\n\t\t\tgoalDisplayBlocks.push(goalsList[goal]);\n\t\t\tconsole.log(i);\n\t\t}\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t{goalDisplayBlocks.map((goal, index) => (\n\t\t\t\t<GoalCalendarBlock\n\t\t\t\t\tkey={index}\n\t\t\t\t\tgoal={goal}\n\t\t\t\t\tcategory={allCategories.filter((cat) => cat.name === goal.category)}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</div>\n\t);\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AAEA,SAASC,iBAAT,QAAkC,YAAlC;;AAEA,eAAe,SAASC,QAAT,GAAoB;EAAA;;EAClC,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,EAAD,CAAlD;;EAEA,eAAeS,QAAf,GAA0B;IACzB,IAAI;MACH,MAAMC,KAAK,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAU,8BAAV,CAApB;;MACA,IAAIC,IAAI,CAACC,SAAL,CAAeR,SAAf,MAA8BO,IAAI,CAACC,SAAL,CAAeH,KAAK,CAACI,IAArB,CAAlC,EAA8D;QAC7DR,YAAY,CAACI,KAAK,CAACI,IAAP,CAAZ;MACA;;MACDC,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACI,IAAlB;IACA,CAND,CAME,OAAOG,CAAP,EAAU;MACXF,OAAO,CAACC,GAAR,CAAYC,CAAZ;IACA;EACD;;EAED,eAAeC,aAAf,GAA+B;IAC9B,IAAI;MACH,MAAMC,UAAU,GAAG,MAAMlB,KAAK,CAACU,GAAN,CAAU,iCAAV,CAAzB;MACAH,gBAAgB,CAACW,UAAU,CAACL,IAAZ,CAAhB;IACA,CAHD,CAGE,OAAOG,CAAP,EAAU;MACXF,OAAO,CAACC,GAAR,CAAYC,CAAZ;IACA;EACD,CAvBiC,CAyBlC;;;EACA,IAAIV,aAAa,CAACa,MAAd,KAAyB,CAA7B,EAAgC;IAC/BX,QAAQ;IACRS,aAAa;EACb;;EAED,IAAIG,iBAAiB,GAAG,EAAxB;;EAEA,KAAK,MAAMC,IAAX,IAAmBjB,SAAnB,EAA8B;IAC7B,MAAMkB,KAAK,GAAGlB,SAAS,CAACiB,IAAD,CAAT,CAAgBE,YAA9B;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAApB,EAA2BE,CAAC,EAA5B,EAAgC;MAC/BJ,iBAAiB,CAACK,IAAlB,CAAuBrB,SAAS,CAACiB,IAAD,CAAhC;MACAP,OAAO,CAACC,GAAR,CAAYS,CAAZ;IACA;EACD;;EAED,oBACC;IAAA,UACEJ,iBAAiB,CAACM,GAAlB,CAAsB,CAACL,IAAD,EAAOM,KAAP,kBACtB,QAAC,iBAAD;MAEC,IAAI,EAAEN,IAFP;MAGC,QAAQ,EAAEf,aAAa,CAACsB,MAAd,CAAsBC,GAAD,IAASA,GAAG,CAACC,IAAJ,KAAaT,IAAI,CAACU,QAAhD;IAHX,GACMJ,KADN;MAAA;MAAA;MAAA;IAAA,QADA;EADF;IAAA;IAAA;IAAA;EAAA,QADD;AAWA;;GApDuBxB,Q;;KAAAA,Q"},"metadata":{},"sourceType":"module"}