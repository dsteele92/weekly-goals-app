{"ast":null,"code":"var _jsxFileName = \"/Users/daltonsteele/Coding/weekly-goals-app/client/src/components/presentational/circularProgressBar/CircularProgressBar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport axios from 'axios';\nimport Style from './circularProgressBar.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CircularProgressBar(props) {\n  _s();\n\n  // const [progressValue, setProgressValue] = useState(0);\n  const progressValue = useRef();\n  const circularProgress = useRef();\n  const total = props.goals.length;\n  const completed = props.goals.filter(goal => goal.completed).length;\n  let progressStartValue = 0;\n  const progressEndValue = Math.round(completed / total * 100);\n  const speed = 5;\n\n  if (progressEndValue > 0) {\n    let progress = setInterval(() => {\n      progressStartValue++;\n      progressValue.current.textContent = `${progressStartValue}%`;\n      circularProgress.current.style.background = `conic-gradient(#dbdbdb ${progressStartValue * 3.6}deg, #ededed 0deg)`;\n\n      if (progressStartValue === progressEndValue) {\n        clearInterval(progress);\n      } // console.log(progressStartValue);\n\n    }, speed);\n  } else if (progressEndValue === 0) {\n    console.log('we are 0');\n    let progress = setInterval(() => {\n      progressStartValue++;\n      progressValue.current.textContent = `${progressStartValue}%`;\n      circularProgress.current.style.background = '#ededed';\n\n      if (progressStartValue === progressEndValue) {\n        clearInterval(progress);\n      }\n\n      console.log(progressStartValue);\n    }, speed); // progressValue.current.textContent = '0%';\n    // circularProgress.current.style.background = `conic-gradient(#dbdbdb 0deg, #ededed 0deg)`;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Style.progressContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: Style[`circularProgress${props.category.color}`],\n        ref: circularProgress,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: Style.progressValue,\n          ref: progressValue,\n          children: \"0%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: Style.text,\n        children: props.category.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 3\n  }, this);\n}\n\n_s(CircularProgressBar, \"LZvgEGG9oFdllSeczwZgpx20/pM=\");\n\n_c = CircularProgressBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"CircularProgressBar\");","map":{"version":3,"names":["React","useState","useRef","axios","Style","CircularProgressBar","props","progressValue","circularProgress","total","goals","length","completed","filter","goal","progressStartValue","progressEndValue","Math","round","speed","progress","setInterval","current","textContent","style","background","clearInterval","console","log","progressContainer","category","color","text","name"],"sources":["/Users/daltonsteele/Coding/weekly-goals-app/client/src/components/presentational/circularProgressBar/CircularProgressBar.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport axios from 'axios';\nimport Style from './circularProgressBar.module.scss';\n\nexport default function CircularProgressBar(props) {\n\t// const [progressValue, setProgressValue] = useState(0);\n\tconst progressValue = useRef();\n\tconst circularProgress = useRef();\n\n\tconst total = props.goals.length;\n\tconst completed = props.goals.filter((goal) => goal.completed).length;\n\n\tlet progressStartValue = 0;\n\tconst progressEndValue = Math.round((completed / total) * 100);\n\tconst speed = 5;\n\n\tif (progressEndValue > 0) {\n\t\tlet progress = setInterval(() => {\n\t\t\tprogressStartValue++;\n\t\t\tprogressValue.current.textContent = `${progressStartValue}%`;\n\t\t\tcircularProgress.current.style.background = `conic-gradient(#dbdbdb ${\n\t\t\t\tprogressStartValue * 3.6\n\t\t\t}deg, #ededed 0deg)`;\n\n\t\t\tif (progressStartValue === progressEndValue) {\n\t\t\t\tclearInterval(progress);\n\t\t\t}\n\t\t\t// console.log(progressStartValue);\n\t\t}, speed);\n\t} else if (progressEndValue === 0) {\n\t\tconsole.log('we are 0');\n\t\tlet progress = setInterval(() => {\n\t\t\tprogressStartValue++;\n\t\t\tprogressValue.current.textContent = `${progressStartValue}%`;\n\t\t\tcircularProgress.current.style.background = '#ededed';\n\n\t\t\tif (progressStartValue === progressEndValue) {\n\t\t\t\tclearInterval(progress);\n\t\t\t}\n\t\t\tconsole.log(progressStartValue);\n\t\t}, speed);\n\t\t// progressValue.current.textContent = '0%';\n\t\t// circularProgress.current.style.background = `conic-gradient(#dbdbdb 0deg, #ededed 0deg)`;\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<div className={Style.progressContainer}>\n\t\t\t\t<div className={Style[`circularProgress${props.category.color}`]} ref={circularProgress}>\n\t\t\t\t\t<span className={Style.progressValue} ref={progressValue}>\n\t\t\t\t\t\t0%\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\n\t\t\t\t<span className={Style.text}>{props.category.name}</span>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,mCAAlB;;AAEA,eAAe,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;EAAA;;EAClD;EACA,MAAMC,aAAa,GAAGL,MAAM,EAA5B;EACA,MAAMM,gBAAgB,GAAGN,MAAM,EAA/B;EAEA,MAAMO,KAAK,GAAGH,KAAK,CAACI,KAAN,CAAYC,MAA1B;EACA,MAAMC,SAAS,GAAGN,KAAK,CAACI,KAAN,CAAYG,MAAZ,CAAoBC,IAAD,IAAUA,IAAI,CAACF,SAAlC,EAA6CD,MAA/D;EAEA,IAAII,kBAAkB,GAAG,CAAzB;EACA,MAAMC,gBAAgB,GAAGC,IAAI,CAACC,KAAL,CAAYN,SAAS,GAAGH,KAAb,GAAsB,GAAjC,CAAzB;EACA,MAAMU,KAAK,GAAG,CAAd;;EAEA,IAAIH,gBAAgB,GAAG,CAAvB,EAA0B;IACzB,IAAII,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAChCN,kBAAkB;MAClBR,aAAa,CAACe,OAAd,CAAsBC,WAAtB,GAAqC,GAAER,kBAAmB,GAA1D;MACAP,gBAAgB,CAACc,OAAjB,CAAyBE,KAAzB,CAA+BC,UAA/B,GAA6C,0BAC5CV,kBAAkB,GAAG,GACrB,oBAFD;;MAIA,IAAIA,kBAAkB,KAAKC,gBAA3B,EAA6C;QAC5CU,aAAa,CAACN,QAAD,CAAb;MACA,CAT+B,CAUhC;;IACA,CAXyB,EAWvBD,KAXuB,CAA1B;EAYA,CAbD,MAaO,IAAIH,gBAAgB,KAAK,CAAzB,EAA4B;IAClCW,OAAO,CAACC,GAAR,CAAY,UAAZ;IACA,IAAIR,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAChCN,kBAAkB;MAClBR,aAAa,CAACe,OAAd,CAAsBC,WAAtB,GAAqC,GAAER,kBAAmB,GAA1D;MACAP,gBAAgB,CAACc,OAAjB,CAAyBE,KAAzB,CAA+BC,UAA/B,GAA4C,SAA5C;;MAEA,IAAIV,kBAAkB,KAAKC,gBAA3B,EAA6C;QAC5CU,aAAa,CAACN,QAAD,CAAb;MACA;;MACDO,OAAO,CAACC,GAAR,CAAYb,kBAAZ;IACA,CATyB,EASvBI,KATuB,CAA1B,CAFkC,CAYlC;IACA;EACA;;EAED,oBACC;IAAA,uBACC;MAAK,SAAS,EAAEf,KAAK,CAACyB,iBAAtB;MAAA,wBACC;QAAK,SAAS,EAAEzB,KAAK,CAAE,mBAAkBE,KAAK,CAACwB,QAAN,CAAeC,KAAM,EAAzC,CAArB;QAAkE,GAAG,EAAEvB,gBAAvE;QAAA,uBACC;UAAM,SAAS,EAAEJ,KAAK,CAACG,aAAvB;UAAsC,GAAG,EAAEA,aAA3C;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADD;QAAA;QAAA;QAAA;MAAA,QADD,eAOC;QAAM,SAAS,EAAEH,KAAK,CAAC4B,IAAvB;QAAA,UAA8B1B,KAAK,CAACwB,QAAN,CAAeG;MAA7C;QAAA;QAAA;QAAA;MAAA,QAPD;IAAA;MAAA;MAAA;MAAA;IAAA;EADD;IAAA;IAAA;IAAA;EAAA,QADD;AAaA;;GAtDuB5B,mB;;KAAAA,mB"},"metadata":{},"sourceType":"module"}