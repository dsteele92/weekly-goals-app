{"ast":null,"code":"var _jsxFileName = \"/Users/daltonsteele/Coding/weekly-goals-app/client/src/components/presentational/schedule/Schedule.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Style from './schedule.module.scss';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { GoalCalendarBlock } from 'components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Schedule() {\n  _s();\n\n  // goalsList is the data set from database, with each goal only once\n  // goalsDisplay is the list with an object for every instance of each goal\n  const [goalsList, setGoalsList] = useState([]);\n  const [goalsDisplay, setGoalsDisplay] = useState([]);\n  const [allCategories, setAllCategories] = useState([]);\n  const [updatedDropIds, setUpdatedDropIds] = useState([]);\n\n  async function getGoals() {\n    try {\n      const categories = await axios.get('http://localhost:10000/category');\n      const goals = await axios.get('http://localhost:10000/goals'); // Promise.all([categories, goals]);\n\n      const goalsData = goals.data;\n      console.log(goals.data);\n      let allGoals = [];\n\n      for (const goal in goalsData) {\n        const count = goalsData[goal].timesPerWeek;\n\n        for (let i = 0; i < count; i++) {\n          // dropId is for tracking the movement of the display blocks\n          // dayInfo is for tracking the day and dayIndex of the individual display blocks\n          const dropId = goalsData[goal]._id.concat(`_${i}`);\n\n          const dayInfo = goalsData[goal].days[i];\n          const data = { ...goalsData[goal],\n            dropId,\n            dayInfo\n          };\n          allGoals.push(data);\n        }\n      }\n\n      console.log(allGoals);\n      setAllCategories(categories.data);\n      setGoalsDisplay(allGoals);\n      setGoalsList(goalsData);\n      console.log(allGoals.filter(goal => 'wednesday' in goal.dayInfo));\n    } catch (e) {\n      console.log(e);\n    }\n  } // this will run the axios request on the first render of the component\n\n\n  let needToLoad = allCategories.length === 0 && goalsDisplay.length === 0; // run getCategories() first so that needToLoad will turn false and wont have multiple axios requests\n\n  if (needToLoad) {\n    getGoals();\n  }\n  /*\n  this will be used to make sure that all of the data has been loaded\n  before returning the page content... returning the child components without the data causes an error\n  > unassignedGoals is the last state to be set after the axios request\n  */\n\n\n  let loaded = allCategories.length !== 0 && goalsDisplay.length !== 0;\n\n  function handleOnDragEnd(result) {\n    if (!result.destination) return;\n    console.log(result);\n    let changes = []; // const trackChanges = function (dropId) {\n    // \tlet update = Array.from(updatedDropIds);\n    // \tif (!update.includes(dropId)) {\n    // \t\tupdate.push(dropId);\n    // \t\tsetUpdatedDropIds(update);\n    // \t}\n    // };\n\n    /*\n    >>> dropId and dayInfo are used to track the movement and data changes of each goal\n    >>> _id and days (on original objects in goalsList) are used to update the database\n    */\n\n    const source = result.source.droppableId;\n    const sourceIndex = result.source.index;\n    const destination = result.destination.droppableId;\n    const destinationIndex = result.destination.index; // > find index of goal being moved\n\n    const items = Array.from(goalsDisplay);\n    const index = items.findIndex(goal => goal.dropId === result.draggableId); // > delete property for the day it came from, then add new property for the day it is being assigned to\n    // delete items[index].dayInfo[source];\n    // items[index].dayInfo[destination] = destinationIndex;\n\n    let update = {};\n    update[destination] = destinationIndex;\n    items[index].dayInfo = update;\n    changes.push(result.draggableId); // > for other goals in the source list (except for unassigned list), if index is greater, subtract it by 1\n    // > for other goals in the destination list (except for unassigned list), if index is greater, increase it by 1\n\n    for (const item in items) {\n      const goal = items[item];\n\n      if (goal.dropId !== result.draggableId) {\n        if (source !== destination) {\n          if (source in goal.dayInfo) {\n            if (goal.dayInfo[source] > sourceIndex) {\n              goal.dayInfo[source]--;\n              changes.push(goal.dropId);\n            }\n          }\n\n          if (destination in goal.dayInfo) {\n            if (goal.dayInfo[destination] >= destinationIndex) {\n              goal.dayInfo[destination]++;\n              changes.push(goal.dropId);\n            }\n          }\n        } else {\n          if (source in goal.dayInfo) {\n            if (goal.dayInfo[source] < sourceIndex && goal.dayInfo[source] >= destinationIndex) {\n              goal.dayInfo[source]++;\n              changes.push(goal.dropId);\n            }\n\n            if (goal.dayInfo[source] > sourceIndex && goal.dayInfo[source] <= destinationIndex) {\n              goal.dayInfo[source]--;\n              changes.push(goal.dropId);\n            }\n          }\n        }\n      }\n\n      setGoalsDisplay(items);\n      let dropIds = Array.from(updatedDropIds);\n\n      for (const change in changes) {\n        if (!dropIds.includes(changes[change])) {\n          dropIds.push(changes[change]);\n        }\n\n        setUpdatedDropIds(dropIds);\n      }\n    }\n    /*\n    to keep track of changes:\n    create state array of updated dropId's --> updatedDropIds\n    */\n\n  }\n  /*\n  ON SAVE:\n  */\n\n\n  const onSave = async function () {\n    // updates will contain the object to be passed into the update PUT request\n    // ids array will be used to check if object for that id has already been created or not\n    let updates = [];\n    const ids = [];\n\n    for (const item in updatedDropIds) {\n      const dropId = updatedDropIds[item];\n      const subIdIndex = dropId.indexOf('_') + 1;\n      const subId = dropId.slice(subIdIndex);\n      const id = dropId.slice(0, subIdIndex - 1);\n      const updatedGoal = goalsDisplay.filter(goal => goal.dropId === dropId);\n      const newData = updatedGoal[0].dayInfo;\n\n      if (!ids.includes(id)) {\n        // console.log('NEW UPDATE DATA');\n        const originalGoal = goalsList.filter(goal => goal._id === id);\n        const days = originalGoal[0].days;\n        days[subId] = newData;\n        const updateData = {\n          id: id,\n          days: days\n        };\n        updates.push(updateData);\n        ids.push(id);\n      } else {\n        const index = ids.indexOf(id);\n        updates[index].days[subId] = newData;\n      }\n    }\n\n    console.log(updates);\n    let requests = [];\n\n    for (const update in updates) {\n      const updateId = updates[update].id;\n      const updateData = {\n        days: updates[update].days\n      };\n      const request = axios({\n        method: 'put',\n        url: `http://localhost:10000/goals/${updateId}`,\n        data: updateData\n      });\n      requests.push(request);\n    }\n\n    Promise.all(requests).then(values => console.log(values)).catch(err => console.log(err));\n  }; // > obtain the number after _ in dayId\n  // >> let _ = dayId.indexOf(_)\n  // >> let subId = dayId.slice(_)\n  // > update parent data goalsList.days[subId] = goal.dayInfo\n  // ...\n  // ON SAVE: if goal has changed, update via axios.put\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Style.page,\n    children: loaded && /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleOnDragEnd,\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: Style.unassignedGoals,\n        children: /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"unassigned\",\n          children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"unassigned\",\n            ...provided.droppableProps,\n            ref: provided.innerRef,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"GOALS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 10\n            }, this), goalsDisplay.filter(goal => 'unassigned' in goal.dayInfo).map((goal, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: goal.dropId,\n              index: index,\n              children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                children: /*#__PURE__*/_jsxDEV(GoalCalendarBlock, {\n                  goal: goal,\n                  category: allCategories.filter(cat => cat.name === goal.category)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 14\n              }, this)\n            }, goal.dropId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 12\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: Style.schedule,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: Style.day,\n          children: /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"monday\",\n            children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"monday\",\n              ...provided.droppableProps,\n              ref: provided.innerRef,\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"MONDAY\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 11\n              }, this), goalsDisplay.filter(goal => 'monday' in goal.dayInfo).sort((a, b) => a.dayInfo.monday - b.dayInfo.monday).map((goal, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: goal.dropId,\n                index: index,\n                children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n                  ref: provided.innerRef,\n                  ...provided.draggableProps,\n                  ...provided.dragHandleProps,\n                  children: /*#__PURE__*/_jsxDEV(GoalCalendarBlock, {\n                    goal: goal,\n                    category: allCategories.filter(cat => cat.name === goal.category)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 16\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 15\n                }, this)\n              }, goal.dropId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 13\n              }, this)), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: Style.day,\n          children: /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"tuesday\",\n            children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"tuesday\",\n              ...provided.droppableProps,\n              ref: provided.innerRef,\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"TUESDAY\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 11\n              }, this), goalsDisplay.filter(goal => 'tuesday' in goal.dayInfo).sort((a, b) => a.dayInfo.tuesday - b.dayInfo.tuesday).map((goal, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: goal.dropId,\n                index: index,\n                children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n                  ref: provided.innerRef,\n                  ...provided.draggableProps,\n                  ...provided.dragHandleProps,\n                  children: /*#__PURE__*/_jsxDEV(GoalCalendarBlock, {\n                    goal: goal,\n                    category: allCategories.filter(cat => cat.name === goal.category)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 16\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 15\n                }, this)\n              }, goal.dropId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 13\n              }, this)), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: Style.day,\n          children: /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"wednesday\",\n            children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"wednesday\",\n              ...provided.droppableProps,\n              ref: provided.innerRef,\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"WEDNESDAY\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 11\n              }, this), goalsDisplay.filter(goal => 'wednesday' in goal.dayInfo).sort((a, b) => a.dayInfo.wednesday - b.dayInfo.wednesday).map((goal, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: goal.dropId,\n                index: index,\n                children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n                  ref: provided.innerRef,\n                  ...provided.draggableProps,\n                  ...provided.dragHandleProps,\n                  children: /*#__PURE__*/_jsxDEV(GoalCalendarBlock, {\n                    goal: goal,\n                    category: allCategories.filter(cat => cat.name === goal.category)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 16\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 15\n                }, this)\n              }, goal.dropId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 13\n              }, this)), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: Style.day,\n          children: /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"thursday\",\n            children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"thursday\",\n              ...provided.droppableProps,\n              ref: provided.innerRef,\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"THURSDAY\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 11\n              }, this), goalsDisplay.filter(goal => 'thursday' in goal.dayInfo).sort((a, b) => a.dayInfo.thursday - b.dayInfo.thursday).map((goal, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: goal.dropId,\n                index: index,\n                children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n                  ref: provided.innerRef,\n                  ...provided.draggableProps,\n                  ...provided.dragHandleProps,\n                  children: /*#__PURE__*/_jsxDEV(GoalCalendarBlock, {\n                    goal: goal,\n                    category: allCategories.filter(cat => cat.name === goal.category)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 347,\n                    columnNumber: 16\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 15\n                }, this)\n              }, goal.dropId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 13\n              }, this)), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: Style.day,\n          children: /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"friday\",\n            children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"friday\",\n              ...provided.droppableProps,\n              ref: provided.innerRef,\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"FRIDAY\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 11\n              }, this), goalsDisplay.filter(goal => 'friday' in goal.dayInfo).sort((a, b) => a.dayInfo.friday - b.dayInfo.friday).map((goal, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: goal.dropId,\n                index: index,\n                children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n                  ref: provided.innerRef,\n                  ...provided.draggableProps,\n                  ...provided.dragHandleProps,\n                  children: /*#__PURE__*/_jsxDEV(GoalCalendarBlock, {\n                    goal: goal,\n                    category: allCategories.filter(cat => cat.name === goal.category)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 377,\n                    columnNumber: 16\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 15\n                }, this)\n              }, goal.dropId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 13\n              }, this)), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: Style.day,\n          children: /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"saturday\",\n            children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"saturday\",\n              ...provided.droppableProps,\n              ref: provided.innerRef,\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"SATURDAY\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 11\n              }, this), goalsDisplay.filter(goal => 'saturday' in goal.dayInfo).sort((a, b) => a.dayInfo.saturday - b.dayInfo.saturday).map((goal, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: goal.dropId,\n                index: index,\n                children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n                  ref: provided.innerRef,\n                  ...provided.draggableProps,\n                  ...provided.dragHandleProps,\n                  children: /*#__PURE__*/_jsxDEV(GoalCalendarBlock, {\n                    goal: goal,\n                    category: allCategories.filter(cat => cat.name === goal.category)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 407,\n                    columnNumber: 16\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 403,\n                  columnNumber: 15\n                }, this)\n              }, goal.dropId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 13\n              }, this)), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: Style.day,\n          children: /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"sunday\",\n            children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"sunday\",\n              ...provided.droppableProps,\n              ref: provided.innerRef,\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"SUNDAY\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 11\n              }, this), goalsDisplay.filter(goal => 'sunday' in goal.dayInfo).sort((a, b) => a.dayInfo.sunday - b.dayInfo.sunday).map((goal, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: goal.dropId,\n                index: index,\n                children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n                  ref: provided.innerRef,\n                  ...provided.draggableProps,\n                  ...provided.dragHandleProps,\n                  children: /*#__PURE__*/_jsxDEV(GoalCalendarBlock, {\n                    goal: goal,\n                    category: allCategories.filter(cat => cat.name === goal.category)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 437,\n                    columnNumber: 16\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 433,\n                  columnNumber: 15\n                }, this)\n              }, goal.dropId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 13\n              }, this)), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onSave,\n          className: Style.saveButton,\n          children: \"SAVE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Schedule, \"Ge7vbr9erV9ts/4WstV0rc1I+AM=\");\n\n_c = Schedule;\n\nvar _c;\n\n$RefreshReg$(_c, \"Schedule\");","map":{"version":3,"names":["React","useState","axios","Style","DragDropContext","Droppable","Draggable","GoalCalendarBlock","Schedule","goalsList","setGoalsList","goalsDisplay","setGoalsDisplay","allCategories","setAllCategories","updatedDropIds","setUpdatedDropIds","getGoals","categories","get","goals","goalsData","data","console","log","allGoals","goal","count","timesPerWeek","i","dropId","_id","concat","dayInfo","days","push","filter","e","needToLoad","length","loaded","handleOnDragEnd","result","destination","changes","source","droppableId","sourceIndex","index","destinationIndex","items","Array","from","findIndex","draggableId","update","item","dropIds","change","includes","onSave","updates","ids","subIdIndex","indexOf","subId","slice","id","updatedGoal","newData","originalGoal","updateData","requests","updateId","request","method","url","Promise","all","then","values","catch","err","page","unassignedGoals","provided","droppableProps","innerRef","map","draggableProps","dragHandleProps","cat","name","category","placeholder","schedule","day","sort","a","b","monday","tuesday","wednesday","thursday","friday","saturday","sunday","saveButton"],"sources":["/Users/daltonsteele/Coding/weekly-goals-app/client/src/components/presentational/schedule/Schedule.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport Style from './schedule.module.scss';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nimport { GoalCalendarBlock } from 'components';\n\nexport default function Schedule() {\n\t// goalsList is the data set from database, with each goal only once\n\t// goalsDisplay is the list with an object for every instance of each goal\n\tconst [goalsList, setGoalsList] = useState([]);\n\tconst [goalsDisplay, setGoalsDisplay] = useState([]);\n\tconst [allCategories, setAllCategories] = useState([]);\n\tconst [updatedDropIds, setUpdatedDropIds] = useState([]);\n\n\tasync function getGoals() {\n\t\ttry {\n\t\t\tconst categories = await axios.get('http://localhost:10000/category');\n\t\t\tconst goals = await axios.get('http://localhost:10000/goals');\n\t\t\t// Promise.all([categories, goals]);\n\t\t\tconst goalsData = goals.data;\n\t\t\tconsole.log(goals.data);\n\n\t\t\tlet allGoals = [];\n\t\t\tfor (const goal in goalsData) {\n\t\t\t\tconst count = goalsData[goal].timesPerWeek;\n\t\t\t\tfor (let i = 0; i < count; i++) {\n\t\t\t\t\t// dropId is for tracking the movement of the display blocks\n\t\t\t\t\t// dayInfo is for tracking the day and dayIndex of the individual display blocks\n\t\t\t\t\tconst dropId = goalsData[goal]._id.concat(`_${i}`);\n\t\t\t\t\tconst dayInfo = goalsData[goal].days[i];\n\t\t\t\t\tconst data = { ...goalsData[goal], dropId, dayInfo };\n\t\t\t\t\tallGoals.push(data);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconsole.log(allGoals);\n\t\t\tsetAllCategories(categories.data);\n\t\t\tsetGoalsDisplay(allGoals);\n\t\t\tsetGoalsList(goalsData);\n\t\t\tconsole.log(allGoals.filter((goal) => 'wednesday' in goal.dayInfo));\n\t\t} catch (e) {\n\t\t\tconsole.log(e);\n\t\t}\n\t}\n\n\t// this will run the axios request on the first render of the component\n\tlet needToLoad = allCategories.length === 0 && goalsDisplay.length === 0;\n\t// run getCategories() first so that needToLoad will turn false and wont have multiple axios requests\n\tif (needToLoad) {\n\t\tgetGoals();\n\t}\n\n\t/*\n\tthis will be used to make sure that all of the data has been loaded\n\tbefore returning the page content... returning the child components without the data causes an error\n\t> unassignedGoals is the last state to be set after the axios request\n\t*/\n\tlet loaded = allCategories.length !== 0 && goalsDisplay.length !== 0;\n\n\tfunction handleOnDragEnd(result) {\n\t\tif (!result.destination) return;\n\t\tconsole.log(result);\n\n\t\tlet changes = [];\n\n\t\t// const trackChanges = function (dropId) {\n\t\t// \tlet update = Array.from(updatedDropIds);\n\t\t// \tif (!update.includes(dropId)) {\n\t\t// \t\tupdate.push(dropId);\n\t\t// \t\tsetUpdatedDropIds(update);\n\t\t// \t}\n\t\t// };\n\n\t\t/*\n\t\t>>> dropId and dayInfo are used to track the movement and data changes of each goal\n\t\t>>> _id and days (on original objects in goalsList) are used to update the database\n\t\t*/\n\n\t\tconst source = result.source.droppableId;\n\t\tconst sourceIndex = result.source.index;\n\t\tconst destination = result.destination.droppableId;\n\t\tconst destinationIndex = result.destination.index;\n\n\t\t// > find index of goal being moved\n\t\tconst items = Array.from(goalsDisplay);\n\t\tconst index = items.findIndex((goal) => goal.dropId === result.draggableId);\n\n\t\t// > delete property for the day it came from, then add new property for the day it is being assigned to\n\t\t// delete items[index].dayInfo[source];\n\t\t// items[index].dayInfo[destination] = destinationIndex;\n\n\t\tlet update = {};\n\t\tupdate[destination] = destinationIndex;\n\t\titems[index].dayInfo = update;\n\n\t\tchanges.push(result.draggableId);\n\n\t\t// > for other goals in the source list (except for unassigned list), if index is greater, subtract it by 1\n\t\t// > for other goals in the destination list (except for unassigned list), if index is greater, increase it by 1\n\n\t\tfor (const item in items) {\n\t\t\tconst goal = items[item];\n\t\t\tif (goal.dropId !== result.draggableId) {\n\t\t\t\tif (source !== destination) {\n\t\t\t\t\tif (source in goal.dayInfo) {\n\t\t\t\t\t\tif (goal.dayInfo[source] > sourceIndex) {\n\t\t\t\t\t\t\tgoal.dayInfo[source]--;\n\t\t\t\t\t\t\tchanges.push(goal.dropId);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (destination in goal.dayInfo) {\n\t\t\t\t\t\tif (goal.dayInfo[destination] >= destinationIndex) {\n\t\t\t\t\t\t\tgoal.dayInfo[destination]++;\n\t\t\t\t\t\t\tchanges.push(goal.dropId);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (source in goal.dayInfo) {\n\t\t\t\t\t\tif (goal.dayInfo[source] < sourceIndex && goal.dayInfo[source] >= destinationIndex) {\n\t\t\t\t\t\t\tgoal.dayInfo[source]++;\n\t\t\t\t\t\t\tchanges.push(goal.dropId);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (goal.dayInfo[source] > sourceIndex && goal.dayInfo[source] <= destinationIndex) {\n\t\t\t\t\t\t\tgoal.dayInfo[source]--;\n\t\t\t\t\t\t\tchanges.push(goal.dropId);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tsetGoalsDisplay(items);\n\n\t\t\tlet dropIds = Array.from(updatedDropIds);\n\t\t\tfor (const change in changes) {\n\t\t\t\tif (!dropIds.includes(changes[change])) {\n\t\t\t\t\tdropIds.push(changes[change]);\n\t\t\t\t}\n\t\t\t\tsetUpdatedDropIds(dropIds);\n\t\t\t}\n\t\t}\n\n\t\t/*\n\t\tto keep track of changes:\n\t\tcreate state array of updated dropId's --> updatedDropIds\n\t\t*/\n\t}\n\n\t/*\n\tON SAVE:\n\t*/\n\tconst onSave = async function () {\n\t\t// updates will contain the object to be passed into the update PUT request\n\t\t// ids array will be used to check if object for that id has already been created or not\n\t\tlet updates = [];\n\t\tconst ids = [];\n\t\tfor (const item in updatedDropIds) {\n\t\t\tconst dropId = updatedDropIds[item];\n\t\t\tconst subIdIndex = dropId.indexOf('_') + 1;\n\t\t\tconst subId = dropId.slice(subIdIndex);\n\t\t\tconst id = dropId.slice(0, subIdIndex - 1);\n\n\t\t\tconst updatedGoal = goalsDisplay.filter((goal) => goal.dropId === dropId);\n\t\t\tconst newData = updatedGoal[0].dayInfo;\n\n\t\t\tif (!ids.includes(id)) {\n\t\t\t\t// console.log('NEW UPDATE DATA');\n\t\t\t\tconst originalGoal = goalsList.filter((goal) => goal._id === id);\n\t\t\t\tconst days = originalGoal[0].days;\n\t\t\t\tdays[subId] = newData;\n\n\t\t\t\tconst updateData = {\n\t\t\t\t\tid: id,\n\t\t\t\t\tdays: days,\n\t\t\t\t};\n\n\t\t\t\tupdates.push(updateData);\n\t\t\t\tids.push(id);\n\t\t\t} else {\n\t\t\t\tconst index = ids.indexOf(id);\n\t\t\t\tupdates[index].days[subId] = newData;\n\t\t\t}\n\t\t}\n\t\tconsole.log(updates);\n\n\t\tlet requests = [];\n\n\t\tfor (const update in updates) {\n\t\t\tconst updateId = updates[update].id;\n\t\t\tconst updateData = { days: updates[update].days };\n\t\t\tconst request = axios({\n\t\t\t\tmethod: 'put',\n\t\t\t\turl: `http://localhost:10000/goals/${updateId}`,\n\t\t\t\tdata: updateData,\n\t\t\t});\n\t\t\trequests.push(request);\n\t\t}\n\t\tPromise.all(requests)\n\t\t\t.then((values) => console.log(values))\n\t\t\t.catch((err) => console.log(err));\n\t};\n\n\t// > obtain the number after _ in dayId\n\t// >> let _ = dayId.indexOf(_)\n\t// >> let subId = dayId.slice(_)\n\t// > update parent data goalsList.days[subId] = goal.dayInfo\n\t// ...\n\t// ON SAVE: if goal has changed, update via axios.put\n\n\treturn (\n\t\t<div className={Style.page}>\n\t\t\t{loaded && (\n\t\t\t\t<DragDropContext onDragEnd={handleOnDragEnd}>\n\t\t\t\t\t<section className={Style.unassignedGoals}>\n\t\t\t\t\t\t<Droppable droppableId='unassigned'>\n\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t<ul className='unassigned' {...provided.droppableProps} ref={provided.innerRef}>\n\t\t\t\t\t\t\t\t\t<h3>GOALS</h3>\n\t\t\t\t\t\t\t\t\t{goalsDisplay\n\t\t\t\t\t\t\t\t\t\t.filter((goal) => 'unassigned' in goal.dayInfo)\n\t\t\t\t\t\t\t\t\t\t.map((goal, index) => (\n\t\t\t\t\t\t\t\t\t\t\t<Draggable key={goal.dropId} draggableId={goal.dropId} index={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.dragHandleProps}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<GoalCalendarBlock\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgoal={goal}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcategory={allCategories.filter(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(cat) => cat.name === goal.category\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t</Draggable>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Droppable>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section className={Style.schedule}>\n\t\t\t\t\t\t<div className={Style.day}>\n\t\t\t\t\t\t\t<Droppable droppableId='monday'>\n\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t<ul className='monday' {...provided.droppableProps} ref={provided.innerRef}>\n\t\t\t\t\t\t\t\t\t\t<h3>MONDAY</h3>\n\t\t\t\t\t\t\t\t\t\t{goalsDisplay\n\t\t\t\t\t\t\t\t\t\t\t.filter((goal) => 'monday' in goal.dayInfo)\n\t\t\t\t\t\t\t\t\t\t\t.sort((a, b) => a.dayInfo.monday - b.dayInfo.monday)\n\t\t\t\t\t\t\t\t\t\t\t.map((goal, index) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<Draggable key={goal.dropId} draggableId={goal.dropId} index={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.dragHandleProps}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<GoalCalendarBlock\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgoal={goal}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcategory={allCategories.filter(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(cat) => cat.name === goal.category\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t</Draggable>\n\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Droppable>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={Style.day}>\n\t\t\t\t\t\t\t<Droppable droppableId='tuesday'>\n\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t<ul className='tuesday' {...provided.droppableProps} ref={provided.innerRef}>\n\t\t\t\t\t\t\t\t\t\t<h3>TUESDAY</h3>\n\t\t\t\t\t\t\t\t\t\t{goalsDisplay\n\t\t\t\t\t\t\t\t\t\t\t.filter((goal) => 'tuesday' in goal.dayInfo)\n\t\t\t\t\t\t\t\t\t\t\t.sort((a, b) => a.dayInfo.tuesday - b.dayInfo.tuesday)\n\t\t\t\t\t\t\t\t\t\t\t.map((goal, index) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<Draggable key={goal.dropId} draggableId={goal.dropId} index={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.dragHandleProps}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<GoalCalendarBlock\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgoal={goal}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcategory={allCategories.filter(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(cat) => cat.name === goal.category\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t</Draggable>\n\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Droppable>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={Style.day}>\n\t\t\t\t\t\t\t<Droppable droppableId='wednesday'>\n\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t<ul className='wednesday' {...provided.droppableProps} ref={provided.innerRef}>\n\t\t\t\t\t\t\t\t\t\t<h3>WEDNESDAY</h3>\n\t\t\t\t\t\t\t\t\t\t{goalsDisplay\n\t\t\t\t\t\t\t\t\t\t\t.filter((goal) => 'wednesday' in goal.dayInfo)\n\t\t\t\t\t\t\t\t\t\t\t.sort((a, b) => a.dayInfo.wednesday - b.dayInfo.wednesday)\n\t\t\t\t\t\t\t\t\t\t\t.map((goal, index) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<Draggable key={goal.dropId} draggableId={goal.dropId} index={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.dragHandleProps}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<GoalCalendarBlock\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgoal={goal}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcategory={allCategories.filter(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(cat) => cat.name === goal.category\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t</Draggable>\n\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Droppable>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={Style.day}>\n\t\t\t\t\t\t\t<Droppable droppableId='thursday'>\n\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t<ul className='thursday' {...provided.droppableProps} ref={provided.innerRef}>\n\t\t\t\t\t\t\t\t\t\t<h3>THURSDAY</h3>\n\t\t\t\t\t\t\t\t\t\t{goalsDisplay\n\t\t\t\t\t\t\t\t\t\t\t.filter((goal) => 'thursday' in goal.dayInfo)\n\t\t\t\t\t\t\t\t\t\t\t.sort((a, b) => a.dayInfo.thursday - b.dayInfo.thursday)\n\t\t\t\t\t\t\t\t\t\t\t.map((goal, index) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<Draggable key={goal.dropId} draggableId={goal.dropId} index={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.dragHandleProps}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<GoalCalendarBlock\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgoal={goal}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcategory={allCategories.filter(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(cat) => cat.name === goal.category\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t</Draggable>\n\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Droppable>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={Style.day}>\n\t\t\t\t\t\t\t<Droppable droppableId='friday'>\n\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t<ul className='friday' {...provided.droppableProps} ref={provided.innerRef}>\n\t\t\t\t\t\t\t\t\t\t<h3>FRIDAY</h3>\n\t\t\t\t\t\t\t\t\t\t{goalsDisplay\n\t\t\t\t\t\t\t\t\t\t\t.filter((goal) => 'friday' in goal.dayInfo)\n\t\t\t\t\t\t\t\t\t\t\t.sort((a, b) => a.dayInfo.friday - b.dayInfo.friday)\n\t\t\t\t\t\t\t\t\t\t\t.map((goal, index) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<Draggable key={goal.dropId} draggableId={goal.dropId} index={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.dragHandleProps}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<GoalCalendarBlock\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgoal={goal}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcategory={allCategories.filter(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(cat) => cat.name === goal.category\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t</Draggable>\n\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Droppable>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={Style.day}>\n\t\t\t\t\t\t\t<Droppable droppableId='saturday'>\n\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t<ul className='saturday' {...provided.droppableProps} ref={provided.innerRef}>\n\t\t\t\t\t\t\t\t\t\t<h3>SATURDAY</h3>\n\t\t\t\t\t\t\t\t\t\t{goalsDisplay\n\t\t\t\t\t\t\t\t\t\t\t.filter((goal) => 'saturday' in goal.dayInfo)\n\t\t\t\t\t\t\t\t\t\t\t.sort((a, b) => a.dayInfo.saturday - b.dayInfo.saturday)\n\t\t\t\t\t\t\t\t\t\t\t.map((goal, index) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<Draggable key={goal.dropId} draggableId={goal.dropId} index={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.dragHandleProps}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<GoalCalendarBlock\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgoal={goal}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcategory={allCategories.filter(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(cat) => cat.name === goal.category\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t</Draggable>\n\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Droppable>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={Style.day}>\n\t\t\t\t\t\t\t<Droppable droppableId='sunday'>\n\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t<ul className='sunday' {...provided.droppableProps} ref={provided.innerRef}>\n\t\t\t\t\t\t\t\t\t\t<h3>SUNDAY</h3>\n\t\t\t\t\t\t\t\t\t\t{goalsDisplay\n\t\t\t\t\t\t\t\t\t\t\t.filter((goal) => 'sunday' in goal.dayInfo)\n\t\t\t\t\t\t\t\t\t\t\t.sort((a, b) => a.dayInfo.sunday - b.dayInfo.sunday)\n\t\t\t\t\t\t\t\t\t\t\t.map((goal, index) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<Draggable key={goal.dropId} draggableId={goal.dropId} index={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.dragHandleProps}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<GoalCalendarBlock\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgoal={goal}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcategory={allCategories.filter(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(cat) => cat.name === goal.category\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t</Draggable>\n\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Droppable>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<button onClick={onSave} className={Style.saveButton}>\n\t\t\t\t\t\t\tSAVE\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</section>\n\t\t\t\t</DragDropContext>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}