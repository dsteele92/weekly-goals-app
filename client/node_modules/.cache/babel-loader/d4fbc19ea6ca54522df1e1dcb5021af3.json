{"ast":null,"code":"var _jsxFileName = \"/Users/daltonsteele/Coding/weekly-goals-app/client/src/components/presentational/homeWeekDisplay/HomeWeekDisplay.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Style from './homeWeekDisplay.module.scss';\nimport { SchedulerGoalBlock } from 'components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HomeWeekDisplay() {\n  _s();\n\n  // goalsList is the data set from database, with each goal only once\n  // goalsDisplay is the list with an object for every instance of each goal\n  const [goalsList, setGoalsList] = useState([]);\n  const [goalsDisplay, setGoalsDisplay] = useState([]);\n  const [allCategories, setAllCategories] = useState([]);\n  const [updatedDropIds, setUpdatedDropIds] = useState([]);\n\n  async function getGoals() {\n    try {\n      const categories = await axios.get('http://localhost:10000/category');\n      const goals = await axios.get('http://localhost:10000/goals'); // Promise.all([categories, goals]);\n\n      const goalsData = goals.data;\n      console.log(goals.data);\n      let allGoals = [];\n\n      for (const goal in goalsData) {\n        const count = goalsData[goal].timesPerWeek;\n\n        for (let i = 0; i < count; i++) {\n          // dropId is for tracking the movement of the display blocks\n          // dayInfo is for tracking the day and dayIndex of the individual display blocks\n          const dropId = goalsData[goal]._id.concat(`_${i}`);\n\n          const dayInfo = goalsData[goal].days[i];\n          const data = { ...goalsData[goal],\n            dropId,\n            dayInfo\n          };\n          allGoals.push(data);\n        }\n      }\n\n      console.log(allGoals);\n      setAllCategories(categories.data);\n      setGoalsDisplay(allGoals);\n      setGoalsList(goalsData);\n      console.log(allGoals.filter(goal => 'wednesday' in goal.dayInfo));\n    } catch (e) {\n      console.log(e);\n    }\n  } // this will run the axios request on the first render of the component\n\n\n  let needToLoad = allCategories.length === 0 && goalsDisplay.length === 0; // run getCategories() first so that needToLoad will turn false and wont have multiple axios requests\n\n  if (needToLoad) {\n    getGoals();\n  }\n  /*\n  this will be used to make sure that all of the data has been loaded\n  before returning the page content... returning the child components without the data causes an error\n  > unassignedGoals is the last state to be set after the axios request\n  */\n\n\n  let loaded = allCategories.length !== 0 && goalsDisplay.length !== 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Style.page,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Style.scheduler,\n      children: loaded && /*#__PURE__*/_jsxDEV(\"section\", {\n        className: Style.week,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: Style.day,\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"monday\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Monday\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 9\n            }, this), goalsDisplay.filter(goal => 'monday' in goal.dayInfo).sort((a, b) => a.dayInfo.monday - b.dayInfo.monday).map((goal, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(SchedulerGoalBlock, {\n                goal: goal,\n                category: allCategories.filter(cat => cat.name === goal.category)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 12\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 11\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 3\n  }, this);\n}\n\n_s(HomeWeekDisplay, \"Ge7vbr9erV9ts/4WstV0rc1I+AM=\");\n\n_c = HomeWeekDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeWeekDisplay\");","map":{"version":3,"names":["React","useState","axios","Style","SchedulerGoalBlock","HomeWeekDisplay","goalsList","setGoalsList","goalsDisplay","setGoalsDisplay","allCategories","setAllCategories","updatedDropIds","setUpdatedDropIds","getGoals","categories","get","goals","goalsData","data","console","log","allGoals","goal","count","timesPerWeek","i","dropId","_id","concat","dayInfo","days","push","filter","e","needToLoad","length","loaded","page","scheduler","week","day","sort","a","b","monday","map","index","cat","name","category"],"sources":["/Users/daltonsteele/Coding/weekly-goals-app/client/src/components/presentational/homeWeekDisplay/HomeWeekDisplay.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport Style from './homeWeekDisplay.module.scss';\n\nimport { SchedulerGoalBlock } from 'components';\n\nexport default function HomeWeekDisplay() {\n\t// goalsList is the data set from database, with each goal only once\n\t// goalsDisplay is the list with an object for every instance of each goal\n\tconst [goalsList, setGoalsList] = useState([]);\n\tconst [goalsDisplay, setGoalsDisplay] = useState([]);\n\tconst [allCategories, setAllCategories] = useState([]);\n\tconst [updatedDropIds, setUpdatedDropIds] = useState([]);\n\n\tasync function getGoals() {\n\t\ttry {\n\t\t\tconst categories = await axios.get('http://localhost:10000/category');\n\t\t\tconst goals = await axios.get('http://localhost:10000/goals');\n\t\t\t// Promise.all([categories, goals]);\n\t\t\tconst goalsData = goals.data;\n\t\t\tconsole.log(goals.data);\n\n\t\t\tlet allGoals = [];\n\t\t\tfor (const goal in goalsData) {\n\t\t\t\tconst count = goalsData[goal].timesPerWeek;\n\t\t\t\tfor (let i = 0; i < count; i++) {\n\t\t\t\t\t// dropId is for tracking the movement of the display blocks\n\t\t\t\t\t// dayInfo is for tracking the day and dayIndex of the individual display blocks\n\t\t\t\t\tconst dropId = goalsData[goal]._id.concat(`_${i}`);\n\t\t\t\t\tconst dayInfo = goalsData[goal].days[i];\n\t\t\t\t\tconst data = { ...goalsData[goal], dropId, dayInfo };\n\t\t\t\t\tallGoals.push(data);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconsole.log(allGoals);\n\t\t\tsetAllCategories(categories.data);\n\t\t\tsetGoalsDisplay(allGoals);\n\t\t\tsetGoalsList(goalsData);\n\t\t\tconsole.log(allGoals.filter((goal) => 'wednesday' in goal.dayInfo));\n\t\t} catch (e) {\n\t\t\tconsole.log(e);\n\t\t}\n\t}\n\n\t// this will run the axios request on the first render of the component\n\tlet needToLoad = allCategories.length === 0 && goalsDisplay.length === 0;\n\t// run getCategories() first so that needToLoad will turn false and wont have multiple axios requests\n\tif (needToLoad) {\n\t\tgetGoals();\n\t}\n\n\t/*\n\tthis will be used to make sure that all of the data has been loaded\n\tbefore returning the page content... returning the child components without the data causes an error\n\t> unassignedGoals is the last state to be set after the axios request\n\t*/\n\tlet loaded = allCategories.length !== 0 && goalsDisplay.length !== 0;\n\n\treturn (\n\t\t<div className={Style.page}>\n\t\t\t<div className={Style.scheduler}>\n\t\t\t\t{loaded && (\n\t\t\t\t\t<section className={Style.week}>\n\t\t\t\t\t\t<div className={Style.day}>\n\t\t\t\t\t\t\t<ul className='monday'>\n\t\t\t\t\t\t\t\t<h3>Monday</h3>\n\t\t\t\t\t\t\t\t{goalsDisplay\n\t\t\t\t\t\t\t\t\t.filter((goal) => 'monday' in goal.dayInfo)\n\t\t\t\t\t\t\t\t\t.sort((a, b) => a.dayInfo.monday - b.dayInfo.monday)\n\t\t\t\t\t\t\t\t\t.map((goal, index) => (\n\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t<SchedulerGoalBlock\n\t\t\t\t\t\t\t\t\t\t\t\tgoal={goal}\n\t\t\t\t\t\t\t\t\t\t\t\tcategory={allCategories.filter((cat) => cat.name === goal.category)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</section>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}