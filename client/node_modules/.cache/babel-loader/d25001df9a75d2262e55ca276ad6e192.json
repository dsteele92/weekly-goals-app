{"ast":null,"code":"var _jsxFileName = \"/Users/daltonsteele/Coding/weekly-goals-app/client/src/components/presentational/scheduler/Scheduler.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Style from './scheduler.module.scss';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { SchedulerGoalBlock } from 'components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Scheduler() {\n  _s();\n\n  // goalsList is the data set from database, with each goal only once\n  // goalsDisplay is the list with an object for every instance of each goal\n  const [goalsList, setGoalsList] = useState([]);\n  const [allCategories, setAllCategories] = useState([]);\n  const [updatedIds, setUpdatedIds] = useState([]);\n\n  async function getGoals() {\n    try {\n      const categories = await axios.get('http://localhost:10000/category');\n      const goals = await axios.get('http://localhost:10000/goals');\n      console.log(goals.data);\n      setAllCategories(categories.data);\n      setGoalsList(goals.data);\n    } catch (e) {\n      console.log(e);\n    }\n  } // this will run the axios request on the first render of the component\n\n\n  let needToLoad = allCategories.length === 0 && goalsList.length === 0; // run getCategories() first so that needToLoad will turn false and wont have multiple axios requests\n\n  if (needToLoad) {\n    getGoals();\n  } // this will be used to make sure that all of the data has been loaded\n  // before returning the page content... returning the child components without the data causes an error\n\n\n  let loaded = allCategories.length !== 0 && goalsList.length !== 0;\n\n  function handleOnDragEnd(result) {\n    if (!result.destination) return;\n    console.log(result);\n    let changes = [];\n    const source = result.source.droppableId;\n    const sourceIndex = result.source.index;\n    const destination = result.destination.droppableId;\n    const destinationIndex = result.destination.index; // > find index of goal being moved\n\n    const items = Array.from(goalsList);\n    const index = items.findIndex(goal => goal.dropId === result.draggableId); // > delete property for the day it came from, then add new property for the day it is being assigned to\n    // delete items[index].dayInfo[source];\n    // items[index].dayInfo[destination] = destinationIndex;\n\n    let update = {};\n    update[destination] = destinationIndex;\n    items[index].dayInfo = update;\n    changes.push(result.draggableId); // > for other goals in the source list (except for unassigned list), if index is greater, subtract it by 1\n    // > for other goals in the destination list (except for unassigned list), if index is greater, increase it by 1\n\n    for (const item in items) {\n      const goal = items[item];\n\n      if (goal.dropId !== result.draggableId) {\n        if (source !== destination) {\n          if (source in goal.dayInfo) {\n            if (goal.dayInfo[source] > sourceIndex) {\n              goal.dayInfo[source]--;\n              changes.push(goal.dropId);\n            }\n          }\n\n          if (destination in goal.dayInfo) {\n            if (goal.dayInfo[destination] >= destinationIndex) {\n              goal.dayInfo[destination]++;\n              changes.push(goal.dropId);\n            }\n          }\n        } else {\n          if (source in goal.dayInfo) {\n            if (goal.dayInfo[source] < sourceIndex && goal.dayInfo[source] >= destinationIndex) {\n              goal.dayInfo[source]++;\n              changes.push(goal.dropId);\n            }\n\n            if (goal.dayInfo[source] > sourceIndex && goal.dayInfo[source] <= destinationIndex) {\n              goal.dayInfo[source]--;\n              changes.push(goal.dropId);\n            }\n          }\n        }\n      }\n\n      setGoalsDisplay(items);\n      let dropIds = Array.from(updatedDropIds);\n\n      for (const change in changes) {\n        if (!dropIds.includes(changes[change])) {\n          dropIds.push(changes[change]);\n        }\n\n        setUpdatedDropIds(dropIds);\n      }\n    }\n    /*\n    to keep track of changes:\n    create state array of updated dropId's --> updatedDropIds\n    */\n\n  }\n  /*\n  ON SAVE:\n  */\n\n\n  const onSave = async function () {\n    // updates will contain the object to be passed into the update PUT request\n    // ids array will be used to check if object for that id has already been created or not\n    let updates = [];\n    const ids = [];\n\n    for (const item in updatedDropIds) {\n      const dropId = updatedDropIds[item];\n      const subIdIndex = dropId.indexOf('_') + 1;\n      const subId = dropId.slice(subIdIndex);\n      const id = dropId.slice(0, subIdIndex - 1);\n      const updatedGoal = goalsDisplay.filter(goal => goal.dropId === dropId);\n      const newData = updatedGoal[0].dayInfo;\n\n      if (!ids.includes(id)) {\n        // console.log('NEW UPDATE DATA');\n        const originalGoal = goalsList.filter(goal => goal._id === id);\n        const days = originalGoal[0].days;\n        days[subId] = newData;\n        const updateData = {\n          id: id,\n          days: days\n        };\n        updates.push(updateData);\n        ids.push(id);\n      } else {\n        const index = ids.indexOf(id);\n        updates[index].days[subId] = newData;\n      }\n    }\n\n    console.log(updates);\n    let requests = [];\n\n    for (const update in updates) {\n      const updateId = updates[update].id;\n      const updateData = {\n        days: updates[update].days\n      };\n      const request = axios({\n        method: 'put',\n        url: `http://localhost:10000/goals/${updateId}`,\n        data: updateData\n      });\n      requests.push(request);\n    }\n\n    Promise.all(requests).then(values => console.log(values)).catch(err => console.log(err));\n  }; // > obtain the number after _ in dayId\n  // >> let _ = dayId.indexOf(_)\n  // >> let subId = dayId.slice(_)\n  // > update parent data goalsList.days[subId] = goal.dayInfo\n  // ...\n  // ON SAVE: if goal has changed, update via axios.put\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Style.page,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: Style.scheduler,\n      children: loaded && /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: handleOnDragEnd,\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: Style.unassignedGoals,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Droppable, {\n              droppableId: \"unassigned\",\n              children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"unassigned\",\n                ...provided.droppableProps,\n                ref: provided.innerRef,\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Goals\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 12\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Drag goals to desired day, then click save.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 12\n                }, this), goalsList.filter(goal => goal.day === 'unassigned').map((goal, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                  draggableId: goal._id,\n                  index: index,\n                  children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n                    ref: provided.innerRef,\n                    ...provided.draggableProps,\n                    ...provided.dragHandleProps,\n                    children: /*#__PURE__*/_jsxDEV(SchedulerGoalBlock, {\n                      goal: goal,\n                      category: allCategories.filter(cat => cat.name === goal.category)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 195,\n                      columnNumber: 17\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 16\n                  }, this)\n                }, goal._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 14\n                }, this)), provided.placeholder]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: Style.week,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: Style.day,\n            children: /*#__PURE__*/_jsxDEV(Droppable, {\n              droppableId: \"Monday\",\n              children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"Monday\",\n                ...provided.droppableProps,\n                ref: provided.innerRef,\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Monday\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 12\n                }, this), goalsList.filter(goal => goal.day === 'Monday').sort((a, b) => a.dayInfo.monday - b.dayInfo.monday).map((goal, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                  draggableId: goal._id,\n                  index: index,\n                  children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n                    ref: provided.innerRef,\n                    ...provided.draggableProps,\n                    ...provided.dragHandleProps,\n                    children: /*#__PURE__*/_jsxDEV(SchedulerGoalBlock, {\n                      goal: goal,\n                      category: allCategories.filter(cat => cat.name === goal.category)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 227,\n                      columnNumber: 17\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 16\n                  }, this)\n                }, goal._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 14\n                }, this)), provided.placeholder]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: Style.day,\n            children: /*#__PURE__*/_jsxDEV(Droppable, {\n              droppableId: \"Tuesday\",\n              children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"Tuesday\",\n                ...provided.droppableProps,\n                ref: provided.innerRef,\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Tuesday\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 12\n                }, this), goalsList.filter(goal => goal.day === 'Tuesday').sort((a, b) => a.dayInfo.tuesday - b.dayInfo.tuesday).map((goal, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                  draggableId: goal._id,\n                  index: index,\n                  children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n                    ref: provided.innerRef,\n                    ...provided.draggableProps,\n                    ...provided.dragHandleProps,\n                    children: /*#__PURE__*/_jsxDEV(SchedulerGoalBlock, {\n                      goal: goal,\n                      category: allCategories.filter(cat => cat.name === goal.category)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 257,\n                      columnNumber: 17\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 16\n                  }, this)\n                }, goal._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 14\n                }, this)), provided.placeholder]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: Style.day,\n            children: /*#__PURE__*/_jsxDEV(Droppable, {\n              droppableId: \"Wednesday\",\n              children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"Wednesday\",\n                ...provided.droppableProps,\n                ref: provided.innerRef,\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Wednesday\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 12\n                }, this), goalsList.filter(goal => goal.day === 'Wednesday').sort((a, b) => a.dayInfo.wednesday - b.dayInfo.wednesday).map((goal, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                  draggableId: goal._id,\n                  index: index,\n                  children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n                    ref: provided.innerRef,\n                    ...provided.draggableProps,\n                    ...provided.dragHandleProps,\n                    children: /*#__PURE__*/_jsxDEV(SchedulerGoalBlock, {\n                      goal: goal,\n                      category: allCategories.filter(cat => cat.name === goal.category)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 287,\n                      columnNumber: 17\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 16\n                  }, this)\n                }, goal._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 14\n                }, this)), provided.placeholder]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: Style.day,\n            children: /*#__PURE__*/_jsxDEV(Droppable, {\n              droppableId: \"Thursday\",\n              children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"Thursday\",\n                ...provided.droppableProps,\n                ref: provided.innerRef,\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Thursday\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 12\n                }, this), goalsList.filter(goal => goal.day === 'Thursday').sort((a, b) => a.dayInfo.thursday - b.dayInfo.thursday).map((goal, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                  draggableId: goal._id,\n                  index: index,\n                  children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n                    ref: provided.innerRef,\n                    ...provided.draggableProps,\n                    ...provided.dragHandleProps,\n                    children: /*#__PURE__*/_jsxDEV(SchedulerGoalBlock, {\n                      goal: goal,\n                      category: allCategories.filter(cat => cat.name === goal.category)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 317,\n                      columnNumber: 17\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 313,\n                    columnNumber: 16\n                  }, this)\n                }, goal._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 14\n                }, this)), provided.placeholder]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: Style.day,\n            children: /*#__PURE__*/_jsxDEV(Droppable, {\n              droppableId: \"Friday\",\n              children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"Friday\",\n                ...provided.droppableProps,\n                ref: provided.innerRef,\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Friday\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 12\n                }, this), goalsList.filter(goal => goal.day === 'Friday').sort((a, b) => a.dayInfo.friday - b.dayInfo.friday).map((goal, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                  draggableId: goal._id,\n                  index: index,\n                  children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n                    ref: provided.innerRef,\n                    ...provided.draggableProps,\n                    ...provided.dragHandleProps,\n                    children: /*#__PURE__*/_jsxDEV(SchedulerGoalBlock, {\n                      goal: goal,\n                      category: allCategories.filter(cat => cat.name === goal.category)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 347,\n                      columnNumber: 17\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 343,\n                    columnNumber: 16\n                  }, this)\n                }, goal._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 14\n                }, this)), provided.placeholder]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: Style.day,\n            children: /*#__PURE__*/_jsxDEV(Droppable, {\n              droppableId: \"Saturday\",\n              children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"Saturday\",\n                ...provided.droppableProps,\n                ref: provided.innerRef,\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Saturday\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 12\n                }, this), goalsList.filter(goal => goal.day === 'Saturday').sort((a, b) => a.dayInfo.saturday - b.dayInfo.saturday).map((goal, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                  draggableId: goal._id,\n                  index: index,\n                  children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n                    ref: provided.innerRef,\n                    ...provided.draggableProps,\n                    ...provided.dragHandleProps,\n                    children: /*#__PURE__*/_jsxDEV(SchedulerGoalBlock, {\n                      goal: goal,\n                      category: allCategories.filter(cat => cat.name === goal.category)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 377,\n                      columnNumber: 17\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 373,\n                    columnNumber: 16\n                  }, this)\n                }, goal._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 371,\n                  columnNumber: 14\n                }, this)), provided.placeholder]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: Style.day,\n            children: /*#__PURE__*/_jsxDEV(Droppable, {\n              droppableId: \"Sunday\",\n              children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"Sunday\",\n                ...provided.droppableProps,\n                ref: provided.innerRef,\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Sunday\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 396,\n                  columnNumber: 12\n                }, this), goalsList.filter(goal => goal.day === 'Sunday').sort((a, b) => a.dayInfo.sunday - b.dayInfo.sunday).map((goal, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                  draggableId: goal._id,\n                  index: index,\n                  children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n                    ref: provided.innerRef,\n                    ...provided.draggableProps,\n                    ...provided.dragHandleProps,\n                    children: /*#__PURE__*/_jsxDEV(SchedulerGoalBlock, {\n                      goal: goal,\n                      category: allCategories.filter(cat => cat.name === goal.category)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 407,\n                      columnNumber: 17\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 403,\n                    columnNumber: 16\n                  }, this)\n                }, goal._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 401,\n                  columnNumber: 14\n                }, this)), provided.placeholder]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onSave,\n      className: Style.saveButton,\n      children: \"SAVE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Scheduler, \"LT8QfVFtBT4zOe2C4tD40ZdawkQ=\");\n\n_c = Scheduler;\n\nvar _c;\n\n$RefreshReg$(_c, \"Scheduler\");","map":{"version":3,"names":["React","useState","axios","Style","DragDropContext","Droppable","Draggable","SchedulerGoalBlock","Scheduler","goalsList","setGoalsList","allCategories","setAllCategories","updatedIds","setUpdatedIds","getGoals","categories","get","goals","console","log","data","e","needToLoad","length","loaded","handleOnDragEnd","result","destination","changes","source","droppableId","sourceIndex","index","destinationIndex","items","Array","from","findIndex","goal","dropId","draggableId","update","dayInfo","push","item","setGoalsDisplay","dropIds","updatedDropIds","change","includes","setUpdatedDropIds","onSave","updates","ids","subIdIndex","indexOf","subId","slice","id","updatedGoal","goalsDisplay","filter","newData","originalGoal","_id","days","updateData","requests","updateId","request","method","url","Promise","all","then","values","catch","err","page","scheduler","unassignedGoals","provided","droppableProps","innerRef","day","map","draggableProps","dragHandleProps","cat","name","category","placeholder","week","sort","a","b","monday","tuesday","wednesday","thursday","friday","saturday","sunday","saveButton"],"sources":["/Users/daltonsteele/Coding/weekly-goals-app/client/src/components/presentational/scheduler/Scheduler.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport Style from './scheduler.module.scss';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nimport { SchedulerGoalBlock } from 'components';\n\nexport default function Scheduler() {\n\t// goalsList is the data set from database, with each goal only once\n\t// goalsDisplay is the list with an object for every instance of each goal\n\tconst [goalsList, setGoalsList] = useState([]);\n\tconst [allCategories, setAllCategories] = useState([]);\n\tconst [updatedIds, setUpdatedIds] = useState([]);\n\n\tasync function getGoals() {\n\t\ttry {\n\t\t\tconst categories = await axios.get('http://localhost:10000/category');\n\t\t\tconst goals = await axios.get('http://localhost:10000/goals');\n\t\t\tconsole.log(goals.data);\n\n\t\t\tsetAllCategories(categories.data);\n\t\t\tsetGoalsList(goals.data);\n\t\t} catch (e) {\n\t\t\tconsole.log(e);\n\t\t}\n\t}\n\n\t// this will run the axios request on the first render of the component\n\tlet needToLoad = allCategories.length === 0 && goalsList.length === 0;\n\t// run getCategories() first so that needToLoad will turn false and wont have multiple axios requests\n\tif (needToLoad) {\n\t\tgetGoals();\n\t}\n\n\t// this will be used to make sure that all of the data has been loaded\n\t// before returning the page content... returning the child components without the data causes an error\n\tlet loaded = allCategories.length !== 0 && goalsList.length !== 0;\n\n\tfunction handleOnDragEnd(result) {\n\t\tif (!result.destination) return;\n\t\tconsole.log(result);\n\n\t\tlet changes = [];\n\n\t\tconst source = result.source.droppableId;\n\t\tconst sourceIndex = result.source.index;\n\t\tconst destination = result.destination.droppableId;\n\t\tconst destinationIndex = result.destination.index;\n\n\t\t// > find index of goal being moved\n\t\tconst items = Array.from(goalsList);\n\t\tconst index = items.findIndex((goal) => goal.dropId === result.draggableId);\n\n\t\t// > delete property for the day it came from, then add new property for the day it is being assigned to\n\t\t// delete items[index].dayInfo[source];\n\t\t// items[index].dayInfo[destination] = destinationIndex;\n\n\t\tlet update = {};\n\t\tupdate[destination] = destinationIndex;\n\t\titems[index].dayInfo = update;\n\n\t\tchanges.push(result.draggableId);\n\n\t\t// > for other goals in the source list (except for unassigned list), if index is greater, subtract it by 1\n\t\t// > for other goals in the destination list (except for unassigned list), if index is greater, increase it by 1\n\n\t\tfor (const item in items) {\n\t\t\tconst goal = items[item];\n\t\t\tif (goal.dropId !== result.draggableId) {\n\t\t\t\tif (source !== destination) {\n\t\t\t\t\tif (source in goal.dayInfo) {\n\t\t\t\t\t\tif (goal.dayInfo[source] > sourceIndex) {\n\t\t\t\t\t\t\tgoal.dayInfo[source]--;\n\t\t\t\t\t\t\tchanges.push(goal.dropId);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (destination in goal.dayInfo) {\n\t\t\t\t\t\tif (goal.dayInfo[destination] >= destinationIndex) {\n\t\t\t\t\t\t\tgoal.dayInfo[destination]++;\n\t\t\t\t\t\t\tchanges.push(goal.dropId);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (source in goal.dayInfo) {\n\t\t\t\t\t\tif (goal.dayInfo[source] < sourceIndex && goal.dayInfo[source] >= destinationIndex) {\n\t\t\t\t\t\t\tgoal.dayInfo[source]++;\n\t\t\t\t\t\t\tchanges.push(goal.dropId);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (goal.dayInfo[source] > sourceIndex && goal.dayInfo[source] <= destinationIndex) {\n\t\t\t\t\t\t\tgoal.dayInfo[source]--;\n\t\t\t\t\t\t\tchanges.push(goal.dropId);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tsetGoalsDisplay(items);\n\n\t\t\tlet dropIds = Array.from(updatedDropIds);\n\t\t\tfor (const change in changes) {\n\t\t\t\tif (!dropIds.includes(changes[change])) {\n\t\t\t\t\tdropIds.push(changes[change]);\n\t\t\t\t}\n\t\t\t\tsetUpdatedDropIds(dropIds);\n\t\t\t}\n\t\t}\n\n\t\t/*\n\t\tto keep track of changes:\n\t\tcreate state array of updated dropId's --> updatedDropIds\n\t\t*/\n\t}\n\n\t/*\n\tON SAVE:\n\t*/\n\tconst onSave = async function () {\n\t\t// updates will contain the object to be passed into the update PUT request\n\t\t// ids array will be used to check if object for that id has already been created or not\n\t\tlet updates = [];\n\t\tconst ids = [];\n\t\tfor (const item in updatedDropIds) {\n\t\t\tconst dropId = updatedDropIds[item];\n\t\t\tconst subIdIndex = dropId.indexOf('_') + 1;\n\t\t\tconst subId = dropId.slice(subIdIndex);\n\t\t\tconst id = dropId.slice(0, subIdIndex - 1);\n\n\t\t\tconst updatedGoal = goalsDisplay.filter((goal) => goal.dropId === dropId);\n\t\t\tconst newData = updatedGoal[0].dayInfo;\n\n\t\t\tif (!ids.includes(id)) {\n\t\t\t\t// console.log('NEW UPDATE DATA');\n\t\t\t\tconst originalGoal = goalsList.filter((goal) => goal._id === id);\n\t\t\t\tconst days = originalGoal[0].days;\n\t\t\t\tdays[subId] = newData;\n\n\t\t\t\tconst updateData = {\n\t\t\t\t\tid: id,\n\t\t\t\t\tdays: days,\n\t\t\t\t};\n\n\t\t\t\tupdates.push(updateData);\n\t\t\t\tids.push(id);\n\t\t\t} else {\n\t\t\t\tconst index = ids.indexOf(id);\n\t\t\t\tupdates[index].days[subId] = newData;\n\t\t\t}\n\t\t}\n\t\tconsole.log(updates);\n\n\t\tlet requests = [];\n\n\t\tfor (const update in updates) {\n\t\t\tconst updateId = updates[update].id;\n\t\t\tconst updateData = { days: updates[update].days };\n\t\t\tconst request = axios({\n\t\t\t\tmethod: 'put',\n\t\t\t\turl: `http://localhost:10000/goals/${updateId}`,\n\t\t\t\tdata: updateData,\n\t\t\t});\n\t\t\trequests.push(request);\n\t\t}\n\t\tPromise.all(requests)\n\t\t\t.then((values) => console.log(values))\n\t\t\t.catch((err) => console.log(err));\n\t};\n\n\t// > obtain the number after _ in dayId\n\t// >> let _ = dayId.indexOf(_)\n\t// >> let subId = dayId.slice(_)\n\t// > update parent data goalsList.days[subId] = goal.dayInfo\n\t// ...\n\t// ON SAVE: if goal has changed, update via axios.put\n\n\treturn (\n\t\t<div className={Style.page}>\n\t\t\t<div className={Style.scheduler}>\n\t\t\t\t{loaded && (\n\t\t\t\t\t<DragDropContext onDragEnd={handleOnDragEnd}>\n\t\t\t\t\t\t<section className={Style.unassignedGoals}>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<Droppable droppableId='unassigned'>\n\t\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t\t<ul className='unassigned' {...provided.droppableProps} ref={provided.innerRef}>\n\t\t\t\t\t\t\t\t\t\t\t<h3>Goals</h3>\n\t\t\t\t\t\t\t\t\t\t\t<p>Drag goals to desired day, then click save.</p>\n\t\t\t\t\t\t\t\t\t\t\t{goalsList\n\t\t\t\t\t\t\t\t\t\t\t\t.filter((goal) => goal.day === 'unassigned')\n\t\t\t\t\t\t\t\t\t\t\t\t.map((goal, index) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Draggable key={goal._id} draggableId={goal._id} index={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.dragHandleProps}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<SchedulerGoalBlock\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgoal={goal}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcategory={allCategories.filter(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(cat) => cat.name === goal.category\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Draggable>\n\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Droppable>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t\t<section className={Style.week}>\n\t\t\t\t\t\t\t<div className={Style.day}>\n\t\t\t\t\t\t\t\t<Droppable droppableId='Monday'>\n\t\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t\t<ul className='Monday' {...provided.droppableProps} ref={provided.innerRef}>\n\t\t\t\t\t\t\t\t\t\t\t<h3>Monday</h3>\n\t\t\t\t\t\t\t\t\t\t\t{goalsList\n\t\t\t\t\t\t\t\t\t\t\t\t.filter((goal) => goal.day === 'Monday')\n\t\t\t\t\t\t\t\t\t\t\t\t.sort((a, b) => a.dayInfo.monday - b.dayInfo.monday)\n\t\t\t\t\t\t\t\t\t\t\t\t.map((goal, index) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Draggable key={goal._id} draggableId={goal._id} index={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.dragHandleProps}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<SchedulerGoalBlock\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgoal={goal}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcategory={allCategories.filter(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(cat) => cat.name === goal.category\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Draggable>\n\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Droppable>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className={Style.day}>\n\t\t\t\t\t\t\t\t<Droppable droppableId='Tuesday'>\n\t\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t\t<ul className='Tuesday' {...provided.droppableProps} ref={provided.innerRef}>\n\t\t\t\t\t\t\t\t\t\t\t<h3>Tuesday</h3>\n\t\t\t\t\t\t\t\t\t\t\t{goalsList\n\t\t\t\t\t\t\t\t\t\t\t\t.filter((goal) => goal.day === 'Tuesday')\n\t\t\t\t\t\t\t\t\t\t\t\t.sort((a, b) => a.dayInfo.tuesday - b.dayInfo.tuesday)\n\t\t\t\t\t\t\t\t\t\t\t\t.map((goal, index) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Draggable key={goal._id} draggableId={goal._id} index={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.dragHandleProps}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<SchedulerGoalBlock\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgoal={goal}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcategory={allCategories.filter(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(cat) => cat.name === goal.category\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Draggable>\n\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Droppable>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className={Style.day}>\n\t\t\t\t\t\t\t\t<Droppable droppableId='Wednesday'>\n\t\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t\t<ul className='Wednesday' {...provided.droppableProps} ref={provided.innerRef}>\n\t\t\t\t\t\t\t\t\t\t\t<h3>Wednesday</h3>\n\t\t\t\t\t\t\t\t\t\t\t{goalsList\n\t\t\t\t\t\t\t\t\t\t\t\t.filter((goal) => goal.day === 'Wednesday')\n\t\t\t\t\t\t\t\t\t\t\t\t.sort((a, b) => a.dayInfo.wednesday - b.dayInfo.wednesday)\n\t\t\t\t\t\t\t\t\t\t\t\t.map((goal, index) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Draggable key={goal._id} draggableId={goal._id} index={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.dragHandleProps}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<SchedulerGoalBlock\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgoal={goal}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcategory={allCategories.filter(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(cat) => cat.name === goal.category\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Draggable>\n\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Droppable>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className={Style.day}>\n\t\t\t\t\t\t\t\t<Droppable droppableId='Thursday'>\n\t\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t\t<ul className='Thursday' {...provided.droppableProps} ref={provided.innerRef}>\n\t\t\t\t\t\t\t\t\t\t\t<h3>Thursday</h3>\n\t\t\t\t\t\t\t\t\t\t\t{goalsList\n\t\t\t\t\t\t\t\t\t\t\t\t.filter((goal) => goal.day === 'Thursday')\n\t\t\t\t\t\t\t\t\t\t\t\t.sort((a, b) => a.dayInfo.thursday - b.dayInfo.thursday)\n\t\t\t\t\t\t\t\t\t\t\t\t.map((goal, index) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Draggable key={goal._id} draggableId={goal._id} index={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.dragHandleProps}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<SchedulerGoalBlock\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgoal={goal}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcategory={allCategories.filter(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(cat) => cat.name === goal.category\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Draggable>\n\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Droppable>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className={Style.day}>\n\t\t\t\t\t\t\t\t<Droppable droppableId='Friday'>\n\t\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t\t<ul className='Friday' {...provided.droppableProps} ref={provided.innerRef}>\n\t\t\t\t\t\t\t\t\t\t\t<h3>Friday</h3>\n\t\t\t\t\t\t\t\t\t\t\t{goalsList\n\t\t\t\t\t\t\t\t\t\t\t\t.filter((goal) => goal.day === 'Friday')\n\t\t\t\t\t\t\t\t\t\t\t\t.sort((a, b) => a.dayInfo.friday - b.dayInfo.friday)\n\t\t\t\t\t\t\t\t\t\t\t\t.map((goal, index) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Draggable key={goal._id} draggableId={goal._id} index={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.dragHandleProps}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<SchedulerGoalBlock\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgoal={goal}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcategory={allCategories.filter(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(cat) => cat.name === goal.category\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Draggable>\n\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Droppable>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className={Style.day}>\n\t\t\t\t\t\t\t\t<Droppable droppableId='Saturday'>\n\t\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t\t<ul className='Saturday' {...provided.droppableProps} ref={provided.innerRef}>\n\t\t\t\t\t\t\t\t\t\t\t<h3>Saturday</h3>\n\t\t\t\t\t\t\t\t\t\t\t{goalsList\n\t\t\t\t\t\t\t\t\t\t\t\t.filter((goal) => goal.day === 'Saturday')\n\t\t\t\t\t\t\t\t\t\t\t\t.sort((a, b) => a.dayInfo.saturday - b.dayInfo.saturday)\n\t\t\t\t\t\t\t\t\t\t\t\t.map((goal, index) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Draggable key={goal._id} draggableId={goal._id} index={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.dragHandleProps}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<SchedulerGoalBlock\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgoal={goal}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcategory={allCategories.filter(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(cat) => cat.name === goal.category\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Draggable>\n\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Droppable>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className={Style.day}>\n\t\t\t\t\t\t\t\t<Droppable droppableId='Sunday'>\n\t\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t\t<ul className='Sunday' {...provided.droppableProps} ref={provided.innerRef}>\n\t\t\t\t\t\t\t\t\t\t\t<h3>Sunday</h3>\n\t\t\t\t\t\t\t\t\t\t\t{goalsList\n\t\t\t\t\t\t\t\t\t\t\t\t.filter((goal) => goal.day === 'Sunday')\n\t\t\t\t\t\t\t\t\t\t\t\t.sort((a, b) => a.dayInfo.sunday - b.dayInfo.sunday)\n\t\t\t\t\t\t\t\t\t\t\t\t.map((goal, index) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Draggable key={goal._id} draggableId={goal._id} index={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.dragHandleProps}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<SchedulerGoalBlock\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgoal={goal}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcategory={allCategories.filter(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(cat) => cat.name === goal.category\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Draggable>\n\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Droppable>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</DragDropContext>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<button onClick={onSave} className={Style.saveButton}>\n\t\t\t\tSAVE\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}