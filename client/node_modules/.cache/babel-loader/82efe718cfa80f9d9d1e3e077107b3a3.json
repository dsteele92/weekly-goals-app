{"ast":null,"code":"var _jsxFileName = \"/Users/daltonsteele/Coding/weekly-goals-app/client/src/components/presentational/schedule/Schedule.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Style from './schedule.module.scss';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { GoalCalendarBlock } from 'components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Schedule() {\n  _s();\n\n  const [allCategories, setAllCategories] = useState([]);\n  const [unassignedGoals, setUnassignedGoals] = useState([]);\n  const [mondayGoals, setMondayGoals] = useState([]);\n  const [tuesdayGoals, setTuesdayGoals] = useState([]);\n  const [wednesdayGoals, setWednesdayGoals] = useState([]);\n  const [thursdayGoals, setThursdayGoals] = useState([]);\n  const [fridayGoals, setFridayGoals] = useState([]);\n  const [saturdayGoals, setSaturdayGoals] = useState([]);\n  const [sundayGoals, setSundayGoals] = useState([]);\n\n  async function getGoals() {\n    try {\n      const goals = await axios.get('http://localhost:10000/goals');\n      const goalsList = goals.data;\n      console.log(goals.data);\n      let allGoals = [];\n\n      for (const goal in goalsList) {\n        const count = goalsList[goal].timesPerWeek;\n\n        for (let i = 0; i < count; i++) {\n          const dropId = goalsList[goal]._id.concat(`_${i}`);\n\n          const data = { ...goalsList[goal],\n            dropId\n          };\n          allGoals.push(data);\n        }\n      }\n\n      console.log(allGoals.filter(goal => Object.keys(goal.days).length <= 1));\n      setMondayGoals(allGoals.filter(goal => 'monday' in goal.days));\n      setTuesdayGoals(allGoals.filter(goal => 'tuesday' in goal.days));\n      setWednesdayGoals(allGoals.filter(goal => 'wednesday' in goal.days));\n      setThursdayGoals(allGoals.filter(goal => 'thursday' in goal.days));\n      setFridayGoals(allGoals.filter(goal => 'friday' in goal.days));\n      setSaturdayGoals(allGoals.filter(goal => 'saturday' in goal.days));\n      setSundayGoals(allGoals.filter(goal => 'sunday' in goal.days));\n      setUnassignedGoals(allGoals.filter(goal => Object.keys(goal.days).length <= 1));\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  async function getCategories() {\n    try {\n      const categories = await axios.get('http://localhost:10000/category');\n      setAllCategories(categories.data);\n    } catch (e) {\n      console.log(e);\n    }\n  } // this will run the axios request on the first render of the component\n\n\n  let needToLoad = allCategories.length === 0 && unassignedGoals.length === 0 && mondayGoals.length === 0 && tuesdayGoals.length === 0 && wednesdayGoals.length === 0 && thursdayGoals.length === 0 && fridayGoals.length === 0 && saturdayGoals.length === 0 && sundayGoals.length === 0;\n\n  if (needToLoad) {\n    getGoals();\n    getCategories();\n  }\n  /*this will be used to make sure that all of the data has been loaded\n  before returning the page content... returning the child components without the data causes an error*/\n\n\n  let loaded = allCategories.length !== 0 && unassignedGoals.length !== 0; // function handleOnDragEnd(result) {\n  // \tif (!result.destination) return;\n  // \tconsole.log(result);\n  // \tconst items = Array.from(goalDisplayBlocks);\n  // \tconst [reorderedItem] = items.splice(result.source.index, 1);\n  // \titems.splice(result.destination.index, 0, reorderedItem);\n  // \tconsole.log(items);\n  // \tsetGoalDisplayBlocks(items);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Style.page\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Schedule, \"cdCBg9I51vWMlIhau5x6/3J0JVE=\");\n\n_c = Schedule;\n\nvar _c;\n\n$RefreshReg$(_c, \"Schedule\");","map":{"version":3,"names":["React","useState","axios","Style","DragDropContext","Droppable","Draggable","GoalCalendarBlock","Schedule","allCategories","setAllCategories","unassignedGoals","setUnassignedGoals","mondayGoals","setMondayGoals","tuesdayGoals","setTuesdayGoals","wednesdayGoals","setWednesdayGoals","thursdayGoals","setThursdayGoals","fridayGoals","setFridayGoals","saturdayGoals","setSaturdayGoals","sundayGoals","setSundayGoals","getGoals","goals","get","goalsList","data","console","log","allGoals","goal","count","timesPerWeek","i","dropId","_id","concat","push","filter","Object","keys","days","length","e","getCategories","categories","needToLoad","loaded","page"],"sources":["/Users/daltonsteele/Coding/weekly-goals-app/client/src/components/presentational/schedule/Schedule.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport Style from './schedule.module.scss';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nimport { GoalCalendarBlock } from 'components';\n\nexport default function Schedule() {\n\tconst [allCategories, setAllCategories] = useState([]);\n\tconst [unassignedGoals, setUnassignedGoals] = useState([]);\n\tconst [mondayGoals, setMondayGoals] = useState([]);\n\tconst [tuesdayGoals, setTuesdayGoals] = useState([]);\n\tconst [wednesdayGoals, setWednesdayGoals] = useState([]);\n\tconst [thursdayGoals, setThursdayGoals] = useState([]);\n\tconst [fridayGoals, setFridayGoals] = useState([]);\n\tconst [saturdayGoals, setSaturdayGoals] = useState([]);\n\tconst [sundayGoals, setSundayGoals] = useState([]);\n\n\tasync function getGoals() {\n\t\ttry {\n\t\t\tconst goals = await axios.get('http://localhost:10000/goals');\n\t\t\tconst goalsList = goals.data;\n\t\t\tconsole.log(goals.data);\n\n\t\t\tlet allGoals = [];\n\t\t\tfor (const goal in goalsList) {\n\t\t\t\tconst count = goalsList[goal].timesPerWeek;\n\t\t\t\tfor (let i = 0; i < count; i++) {\n\t\t\t\t\tconst dropId = goalsList[goal]._id.concat(`_${i}`);\n\t\t\t\t\tconst data = { ...goalsList[goal], dropId };\n\t\t\t\t\tallGoals.push(data);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconsole.log(allGoals.filter((goal) => Object.keys(goal.days).length <= 1));\n\t\t\tsetMondayGoals(allGoals.filter((goal) => 'monday' in goal.days));\n\t\t\tsetTuesdayGoals(allGoals.filter((goal) => 'tuesday' in goal.days));\n\t\t\tsetWednesdayGoals(allGoals.filter((goal) => 'wednesday' in goal.days));\n\t\t\tsetThursdayGoals(allGoals.filter((goal) => 'thursday' in goal.days));\n\t\t\tsetFridayGoals(allGoals.filter((goal) => 'friday' in goal.days));\n\t\t\tsetSaturdayGoals(allGoals.filter((goal) => 'saturday' in goal.days));\n\t\t\tsetSundayGoals(allGoals.filter((goal) => 'sunday' in goal.days));\n\t\t\tsetUnassignedGoals(allGoals.filter((goal) => Object.keys(goal.days).length <= 1));\n\t\t} catch (e) {\n\t\t\tconsole.log(e);\n\t\t}\n\t}\n\n\tasync function getCategories() {\n\t\ttry {\n\t\t\tconst categories = await axios.get('http://localhost:10000/category');\n\t\t\tsetAllCategories(categories.data);\n\t\t} catch (e) {\n\t\t\tconsole.log(e);\n\t\t}\n\t}\n\n\t// this will run the axios request on the first render of the component\n\tlet needToLoad =\n\t\tallCategories.length === 0 &&\n\t\tunassignedGoals.length === 0 &&\n\t\tmondayGoals.length === 0 &&\n\t\ttuesdayGoals.length === 0 &&\n\t\twednesdayGoals.length === 0 &&\n\t\tthursdayGoals.length === 0 &&\n\t\tfridayGoals.length === 0 &&\n\t\tsaturdayGoals.length === 0 &&\n\t\tsundayGoals.length === 0;\n\n\tif (needToLoad) {\n\t\tgetGoals();\n\t\tgetCategories();\n\t}\n\n\t/*this will be used to make sure that all of the data has been loaded\n\tbefore returning the page content... returning the child components without the data causes an error*/\n\tlet loaded = allCategories.length !== 0 && unassignedGoals.length !== 0;\n\n\t// function handleOnDragEnd(result) {\n\t// \tif (!result.destination) return;\n\t// \tconsole.log(result);\n\t// \tconst items = Array.from(goalDisplayBlocks);\n\t// \tconst [reorderedItem] = items.splice(result.source.index, 1);\n\t// \titems.splice(result.destination.index, 0, reorderedItem);\n\t// \tconsole.log(items);\n\n\t// \tsetGoalDisplayBlocks(items);\n\t// }\n\n\treturn (\n\t\t<div className={Style.page}>\n\t\t\t{/* {loaded && (\n\t\t\t\t<DragDropContext onDragEnd={handleOnDragEnd}>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Droppable droppableId='goals'>\n\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t<ul className='goals' {...provided.droppableProps} ref={provided.innerRef}>\n\t\t\t\t\t\t\t\t\t{goalDisplayBlocks.map((goal, index) => (\n\t\t\t\t\t\t\t\t\t\t<Draggable key={goal.dropId} draggableId={goal.dropId} index={index}>\n\t\t\t\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.dragHandleProps}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<GoalCalendarBlock\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgoal={goal}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcategory={allCategories.filter(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(cat) => cat.name === goal.category\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</Draggable>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Droppable>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={Style.schedule}>\n\t\t\t\t\t\t<Droppable droppableId='goals'>\n\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t<ul className='goals' {...provided.droppableProps} ref={provided.innerRef}>\n\t\t\t\t\t\t\t\t\t{goalDisplayBlocks.map((goal, index) => (\n\t\t\t\t\t\t\t\t\t\t<Draggable key={goal.dropId} draggableId={goal.dropId} index={index}>\n\t\t\t\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.dragHandleProps}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<GoalCalendarBlock\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgoal={goal}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcategory={allCategories.filter(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(cat) => cat.name === goal.category\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</Draggable>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Droppable>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={Style.schedule}>\n\t\t\t\t\t\t<Droppable droppableId='goals'>\n\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t<ul className='goals' {...provided.droppableProps} ref={provided.innerRef}>\n\t\t\t\t\t\t\t\t\t{goalDisplayBlocks.map((goal, index) => (\n\t\t\t\t\t\t\t\t\t\t<Draggable key={goal.dropId} draggableId={goal.dropId} index={index}>\n\t\t\t\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.dragHandleProps}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<GoalCalendarBlock\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgoal={goal}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcategory={allCategories.filter(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(cat) => cat.name === goal.category\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</Draggable>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Droppable>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={Style.schedule}>\n\t\t\t\t\t\t<Droppable droppableId='goals'>\n\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t<ul className='goals' {...provided.droppableProps} ref={provided.innerRef}>\n\t\t\t\t\t\t\t\t\t{goalDisplayBlocks.map((goal, index) => (\n\t\t\t\t\t\t\t\t\t\t<Draggable key={goal.dropId} draggableId={goal.dropId} index={index}>\n\t\t\t\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.dragHandleProps}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<GoalCalendarBlock\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgoal={goal}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcategory={allCategories.filter(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(cat) => cat.name === goal.category\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</Draggable>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Droppable>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={Style.schedule}>\n\t\t\t\t\t\t<Droppable droppableId='goals'>\n\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t<ul className='goals' {...provided.droppableProps} ref={provided.innerRef}>\n\t\t\t\t\t\t\t\t\t{goalDisplayBlocks.map((goal, index) => (\n\t\t\t\t\t\t\t\t\t\t<Draggable key={goal.dropId} draggableId={goal.dropId} index={index}>\n\t\t\t\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.dragHandleProps}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<GoalCalendarBlock\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgoal={goal}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcategory={allCategories.filter(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(cat) => cat.name === goal.category\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</Draggable>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Droppable>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={Style.schedule}>\n\t\t\t\t\t\t<Droppable droppableId='goals'>\n\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t<ul className='goals' {...provided.droppableProps} ref={provided.innerRef}>\n\t\t\t\t\t\t\t\t\t{goalDisplayBlocks.map((goal, index) => (\n\t\t\t\t\t\t\t\t\t\t<Draggable key={goal.dropId} draggableId={goal.dropId} index={index}>\n\t\t\t\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.dragHandleProps}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<GoalCalendarBlock\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgoal={goal}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcategory={allCategories.filter(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(cat) => cat.name === goal.category\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</Draggable>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Droppable>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={Style.schedule}>\n\t\t\t\t\t\t<Droppable droppableId='goals'>\n\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t<ul className='goals' {...provided.droppableProps} ref={provided.innerRef}>\n\t\t\t\t\t\t\t\t\t{goalDisplayBlocks.map((goal, index) => (\n\t\t\t\t\t\t\t\t\t\t<Draggable key={goal.dropId} draggableId={goal.dropId} index={index}>\n\t\t\t\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.dragHandleProps}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<GoalCalendarBlock\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgoal={goal}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcategory={allCategories.filter(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(cat) => cat.name === goal.category\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</Draggable>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Droppable>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={Style.schedule}>\n\t\t\t\t\t\t<Droppable droppableId='goals'>\n\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t<ul className='goals' {...provided.droppableProps} ref={provided.innerRef}>\n\t\t\t\t\t\t\t\t\t{goalDisplayBlocks.map((goal, index) => (\n\t\t\t\t\t\t\t\t\t\t<Draggable key={goal.dropId} draggableId={goal.dropId} index={index}>\n\t\t\t\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.dragHandleProps}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<GoalCalendarBlock\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgoal={goal}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcategory={allCategories.filter(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(cat) => cat.name === goal.category\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</Draggable>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Droppable>\n\t\t\t\t\t</div>\n\t\t\t\t</DragDropContext>\n\t\t\t)} */}\n\t\t</div>\n\t);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}