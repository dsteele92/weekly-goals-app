{"ast":null,"code":"var _jsxFileName = \"/Users/daltonsteele/Coding/weekly-goals-app/client/src/components/presentational/scheduler/Scheduler.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Style from './scheduler.module.scss';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { SchedulerGoalBlock } from 'components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Scheduler() {\n  _s();\n\n  // goalsList is the data set from database, with each goal only once\n  // goalsDisplay is the list with an object for every instance of each goal\n  const [goalsList, setGoalsList] = useState([]);\n  const [allCategories, setAllCategories] = useState([]);\n  const [updatedIds, setUpdatedIds] = useState([]);\n\n  async function getGoals() {\n    try {\n      const categories = await axios.get('http://localhost:10000/category');\n      const goals = await axios.get('http://localhost:10000/goals');\n      console.log(goals.data);\n      setAllCategories(categories.data);\n      setGoalsList(goals.data);\n    } catch (e) {\n      console.log(e);\n    }\n  } // this will run the axios request on the first render of the component\n\n\n  let needToLoad = allCategories.length === 0 && goalsList.length === 0; // run getCategories() first so that needToLoad will turn false and wont have multiple axios requests\n\n  if (needToLoad) {\n    getGoals();\n  } // this will be used to make sure that all of the data has been loaded\n  // before returning the page content... returning the child components without the data causes an error\n\n\n  let loaded = allCategories.length !== 0 && goalsList.length !== 0;\n\n  function handleOnDragEnd(result) {\n    if (!result.destination) return;\n    console.log(result);\n    let changes = [];\n    const source = result.source.droppableId;\n    const sourceIndex = result.source.index;\n    const destination = result.destination.droppableId;\n    const destinationIndex = result.destination.index; // > find index of goal being moved\n\n    const items = Array.from(goalsList);\n    const index = items.findIndex(goal => goal._id === result.draggableId);\n    let update = {};\n    update[destination] = destinationIndex;\n    items[index].dayInfo = update;\n    changes.push(result.draggableId); // > for other goals in the source list (except for unassigned list), if index is greater, subtract it by 1\n    // > for other goals in the destination list (except for unassigned list), if index is greater, increase it by 1\n\n    for (const item in items) {\n      const goal = items[item];\n\n      if (goal.dropId !== result.draggableId) {\n        if (source !== destination) {\n          if (source in goal.dayInfo) {\n            if (goal.dayInfo[source] > sourceIndex) {\n              goal.dayInfo[source]--;\n              changes.push(goal.dropId);\n            }\n          }\n\n          if (destination in goal.dayInfo) {\n            if (goal.dayInfo[destination] >= destinationIndex) {\n              goal.dayInfo[destination]++;\n              changes.push(goal.dropId);\n            }\n          }\n        } else {\n          if (source in goal.dayInfo) {\n            if (goal.dayInfo[source] < sourceIndex && goal.dayInfo[source] >= destinationIndex) {\n              goal.dayInfo[source]++;\n              changes.push(goal.dropId);\n            }\n\n            if (goal.dayInfo[source] > sourceIndex && goal.dayInfo[source] <= destinationIndex) {\n              goal.dayInfo[source]--;\n              changes.push(goal.dropId);\n            }\n          }\n        }\n      }\n\n      setGoalsDisplay(items); // \tlet dropIds = Array.from(updatedDropIds);\n      // \tfor (const change in changes) {\n      // \t\tif (!dropIds.includes(changes[change])) {\n      // \t\t\tdropIds.push(changes[change]);\n      // \t\t}\n      // \t\tsetUpdatedDropIds(dropIds);\n      // \t}\n      // }\n\n      /*\n      to keep track of changes:\n      create state array of updated dropId's --> updatedDropIds\n      */\n    }\n    /*\n    ON SAVE:\n    */\n    // const onSave = async function () {\n    // \t// updates will contain the object to be passed into the update PUT request\n    // \t// ids array will be used to check if object for that id has already been created or not\n    // \tlet updates = [];\n    // \tconst ids = [];\n    // \tfor (const item in updatedDropIds) {\n    // \t\tconst dropId = updatedDropIds[item];\n    // \t\tconst subIdIndex = dropId.indexOf('_') + 1;\n    // \t\tconst subId = dropId.slice(subIdIndex);\n    // \t\tconst id = dropId.slice(0, subIdIndex - 1);\n    // \t\tconst updatedGoal = goalsDisplay.filter((goal) => goal.dropId === dropId);\n    // \t\tconst newData = updatedGoal[0].dayInfo;\n    // \t\tif (!ids.includes(id)) {\n    // \t\t\t// console.log('NEW UPDATE DATA');\n    // \t\t\tconst originalGoal = goalsList.filter((goal) => goal._id === id);\n    // \t\t\tconst days = originalGoal[0].days;\n    // \t\t\tdays[subId] = newData;\n    // \t\t\tconst updateData = {\n    // \t\t\t\tid: id,\n    // \t\t\t\tdays: days,\n    // \t\t\t};\n    // \t\t\tupdates.push(updateData);\n    // \t\t\tids.push(id);\n    // \t\t} else {\n    // \t\t\tconst index = ids.indexOf(id);\n    // \t\t\tupdates[index].days[subId] = newData;\n    // \t\t}\n    // \t}\n    // \tconsole.log(updates);\n    // \tlet requests = [];\n    // \tfor (const update in updates) {\n    // \t\tconst updateId = updates[update].id;\n    // \t\tconst updateData = { days: updates[update].days };\n    // \t\tconst request = axios({\n    // \t\t\tmethod: 'put',\n    // \t\t\turl: `http://localhost:10000/goals/${updateId}`,\n    // \t\t\tdata: updateData,\n    // \t\t});\n    // \t\trequests.push(request);\n    // \t}\n    // \tPromise.all(requests)\n    // \t\t.then((values) => console.log(values))\n    // \t\t.catch((err) => console.log(err));\n    // };\n    // > obtain the number after _ in dayId\n    // >> let _ = dayId.indexOf(_)\n    // >> let subId = dayId.slice(_)\n    // > update parent data goalsList.days[subId] = goal.dayInfo\n    // ...\n    // ON SAVE: if goal has changed, update via axios.put\n\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Style.page,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: Style.scheduler,\n        children: loaded && /*#__PURE__*/_jsxDEV(DragDropContext, {\n          onDragEnd: handleOnDragEnd,\n          children: [/*#__PURE__*/_jsxDEV(\"section\", {\n            className: Style.unassignedGoals,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Droppable, {\n                droppableId: \"unassigned\",\n                children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"unassigned\",\n                  ...provided.droppableProps,\n                  ref: provided.innerRef,\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"Goals\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 13\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Drag goals to desired day, then click save.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 13\n                  }, this), goalsList.filter(goal => goal.day === 'unassigned').map((goal, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                    draggableId: goal._id,\n                    index: index,\n                    children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n                      ref: provided.innerRef,\n                      ...provided.draggableProps,\n                      ...provided.dragHandleProps,\n                      children: /*#__PURE__*/_jsxDEV(SchedulerGoalBlock, {\n                        goal: goal,\n                        category: allCategories.filter(cat => cat.name === goal.category)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 194,\n                        columnNumber: 18\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 190,\n                      columnNumber: 17\n                    }, this)\n                  }, goal._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 15\n                  }, this)), provided.placeholder]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 12\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n            className: Style.week,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: Style.day,\n              children: /*#__PURE__*/_jsxDEV(Droppable, {\n                droppableId: \"Monday\",\n                children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"Monday\",\n                  ...provided.droppableProps,\n                  ref: provided.innerRef,\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"Monday\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 13\n                  }, this), goalsList.filter(goal => goal.day === 'Monday').sort((a, b) => a.dayInfo.monday - b.dayInfo.monday).map((goal, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                    draggableId: goal._id,\n                    index: index,\n                    children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n                      ref: provided.innerRef,\n                      ...provided.draggableProps,\n                      ...provided.dragHandleProps,\n                      children: /*#__PURE__*/_jsxDEV(SchedulerGoalBlock, {\n                        goal: goal,\n                        category: allCategories.filter(cat => cat.name === goal.category)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 226,\n                        columnNumber: 18\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 222,\n                      columnNumber: 17\n                    }, this)\n                  }, goal._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 15\n                  }, this)), provided.placeholder]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 12\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: Style.day,\n              children: /*#__PURE__*/_jsxDEV(Droppable, {\n                droppableId: \"Tuesday\",\n                children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"Tuesday\",\n                  ...provided.droppableProps,\n                  ref: provided.innerRef,\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"Tuesday\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 13\n                  }, this), goalsList.filter(goal => goal.day === 'Tuesday').sort((a, b) => a.dayInfo.tuesday - b.dayInfo.tuesday).map((goal, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                    draggableId: goal._id,\n                    index: index,\n                    children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n                      ref: provided.innerRef,\n                      ...provided.draggableProps,\n                      ...provided.dragHandleProps,\n                      children: /*#__PURE__*/_jsxDEV(SchedulerGoalBlock, {\n                        goal: goal,\n                        category: allCategories.filter(cat => cat.name === goal.category)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 259,\n                        columnNumber: 18\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 255,\n                      columnNumber: 17\n                    }, this)\n                  }, goal._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 15\n                  }, this)), provided.placeholder]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 12\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: Style.day,\n              children: /*#__PURE__*/_jsxDEV(Droppable, {\n                droppableId: \"Wednesday\",\n                children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"Wednesday\",\n                  ...provided.droppableProps,\n                  ref: provided.innerRef,\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"Wednesday\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 13\n                  }, this), goalsList.filter(goal => goal.day === 'Wednesday').sort((a, b) => a.dayInfo.wednesday - b.dayInfo.wednesday).map((goal, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                    draggableId: goal._id,\n                    index: index,\n                    children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n                      ref: provided.innerRef,\n                      ...provided.draggableProps,\n                      ...provided.dragHandleProps,\n                      children: /*#__PURE__*/_jsxDEV(SchedulerGoalBlock, {\n                        goal: goal,\n                        category: allCategories.filter(cat => cat.name === goal.category)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 292,\n                        columnNumber: 18\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 288,\n                      columnNumber: 17\n                    }, this)\n                  }, goal._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 15\n                  }, this)), provided.placeholder]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 12\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: Style.day,\n              children: /*#__PURE__*/_jsxDEV(Droppable, {\n                droppableId: \"Thursday\",\n                children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"Thursday\",\n                  ...provided.droppableProps,\n                  ref: provided.innerRef,\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"Thursday\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 314,\n                    columnNumber: 13\n                  }, this), goalsList.filter(goal => goal.day === 'Thursday').sort((a, b) => a.dayInfo.thursday - b.dayInfo.thursday).map((goal, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                    draggableId: goal._id,\n                    index: index,\n                    children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n                      ref: provided.innerRef,\n                      ...provided.draggableProps,\n                      ...provided.dragHandleProps,\n                      children: /*#__PURE__*/_jsxDEV(SchedulerGoalBlock, {\n                        goal: goal,\n                        category: allCategories.filter(cat => cat.name === goal.category)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 325,\n                        columnNumber: 18\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 321,\n                      columnNumber: 17\n                    }, this)\n                  }, goal._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 319,\n                    columnNumber: 15\n                  }, this)), provided.placeholder]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 12\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: Style.day,\n              children: /*#__PURE__*/_jsxDEV(Droppable, {\n                droppableId: \"Friday\",\n                children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"Friday\",\n                  ...provided.droppableProps,\n                  ref: provided.innerRef,\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"Friday\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 344,\n                    columnNumber: 13\n                  }, this), goalsList.filter(goal => goal.day === 'Friday').sort((a, b) => a.dayInfo.friday - b.dayInfo.friday).map((goal, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                    draggableId: goal._id,\n                    index: index,\n                    children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n                      ref: provided.innerRef,\n                      ...provided.draggableProps,\n                      ...provided.dragHandleProps,\n                      children: /*#__PURE__*/_jsxDEV(SchedulerGoalBlock, {\n                        goal: goal,\n                        category: allCategories.filter(cat => cat.name === goal.category)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 355,\n                        columnNumber: 18\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 351,\n                      columnNumber: 17\n                    }, this)\n                  }, goal._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 349,\n                    columnNumber: 15\n                  }, this)), provided.placeholder]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 12\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: Style.day,\n              children: /*#__PURE__*/_jsxDEV(Droppable, {\n                droppableId: \"Saturday\",\n                children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"Saturday\",\n                  ...provided.droppableProps,\n                  ref: provided.innerRef,\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"Saturday\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 377,\n                    columnNumber: 13\n                  }, this), goalsList.filter(goal => goal.day === 'Saturday').sort((a, b) => a.dayInfo.saturday - b.dayInfo.saturday).map((goal, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                    draggableId: goal._id,\n                    index: index,\n                    children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n                      ref: provided.innerRef,\n                      ...provided.draggableProps,\n                      ...provided.dragHandleProps,\n                      children: /*#__PURE__*/_jsxDEV(SchedulerGoalBlock, {\n                        goal: goal,\n                        category: allCategories.filter(cat => cat.name === goal.category)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 388,\n                        columnNumber: 18\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 384,\n                      columnNumber: 17\n                    }, this)\n                  }, goal._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 382,\n                    columnNumber: 15\n                  }, this)), provided.placeholder]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 12\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: Style.day,\n              children: /*#__PURE__*/_jsxDEV(Droppable, {\n                droppableId: \"Sunday\",\n                children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"Sunday\",\n                  ...provided.droppableProps,\n                  ref: provided.innerRef,\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"Sunday\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 407,\n                    columnNumber: 13\n                  }, this), goalsList.filter(goal => goal.day === 'Sunday').sort((a, b) => a.dayInfo.sunday - b.dayInfo.sunday).map((goal, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                    draggableId: goal._id,\n                    index: index,\n                    children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n                      ref: provided.innerRef,\n                      ...provided.draggableProps,\n                      ...provided.dragHandleProps,\n                      children: /*#__PURE__*/_jsxDEV(SchedulerGoalBlock, {\n                        goal: goal,\n                        category: allCategories.filter(cat => cat.name === goal.category)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 418,\n                        columnNumber: 18\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 414,\n                      columnNumber: 17\n                    }, this)\n                  }, goal._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 412,\n                    columnNumber: 15\n                  }, this)), provided.placeholder]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 406,\n                  columnNumber: 12\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSave,\n        className: Style.saveButton,\n        children: \"SAVE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 4\n    }, this);\n  }\n}\n\n_s(Scheduler, \"LT8QfVFtBT4zOe2C4tD40ZdawkQ=\");\n\n_c = Scheduler;\n\nvar _c;\n\n$RefreshReg$(_c, \"Scheduler\");","map":{"version":3,"names":["React","useState","axios","Style","DragDropContext","Droppable","Draggable","SchedulerGoalBlock","Scheduler","goalsList","setGoalsList","allCategories","setAllCategories","updatedIds","setUpdatedIds","getGoals","categories","get","goals","console","log","data","e","needToLoad","length","loaded","handleOnDragEnd","result","destination","changes","source","droppableId","sourceIndex","index","destinationIndex","items","Array","from","findIndex","goal","_id","draggableId","update","dayInfo","push","item","dropId","setGoalsDisplay","page","scheduler","unassignedGoals","provided","droppableProps","innerRef","filter","day","map","draggableProps","dragHandleProps","cat","name","category","placeholder","week","sort","a","b","monday","tuesday","wednesday","thursday","friday","saturday","sunday","onSave","saveButton"],"sources":["/Users/daltonsteele/Coding/weekly-goals-app/client/src/components/presentational/scheduler/Scheduler.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport Style from './scheduler.module.scss';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nimport { SchedulerGoalBlock } from 'components';\n\nexport default function Scheduler() {\n\t// goalsList is the data set from database, with each goal only once\n\t// goalsDisplay is the list with an object for every instance of each goal\n\tconst [goalsList, setGoalsList] = useState([]);\n\tconst [allCategories, setAllCategories] = useState([]);\n\tconst [updatedIds, setUpdatedIds] = useState([]);\n\n\tasync function getGoals() {\n\t\ttry {\n\t\t\tconst categories = await axios.get('http://localhost:10000/category');\n\t\t\tconst goals = await axios.get('http://localhost:10000/goals');\n\t\t\tconsole.log(goals.data);\n\n\t\t\tsetAllCategories(categories.data);\n\t\t\tsetGoalsList(goals.data);\n\t\t} catch (e) {\n\t\t\tconsole.log(e);\n\t\t}\n\t}\n\n\t// this will run the axios request on the first render of the component\n\tlet needToLoad = allCategories.length === 0 && goalsList.length === 0;\n\t// run getCategories() first so that needToLoad will turn false and wont have multiple axios requests\n\tif (needToLoad) {\n\t\tgetGoals();\n\t}\n\n\t// this will be used to make sure that all of the data has been loaded\n\t// before returning the page content... returning the child components without the data causes an error\n\tlet loaded = allCategories.length !== 0 && goalsList.length !== 0;\n\n\tfunction handleOnDragEnd(result) {\n\t\tif (!result.destination) return;\n\t\tconsole.log(result);\n\n\t\tlet changes = [];\n\n\t\tconst source = result.source.droppableId;\n\t\tconst sourceIndex = result.source.index;\n\t\tconst destination = result.destination.droppableId;\n\t\tconst destinationIndex = result.destination.index;\n\n\t\t// > find index of goal being moved\n\t\tconst items = Array.from(goalsList);\n\t\tconst index = items.findIndex((goal) => goal._id === result.draggableId);\n\n\t\tlet update = {};\n\t\tupdate[destination] = destinationIndex;\n\t\titems[index].dayInfo = update;\n\n\t\tchanges.push(result.draggableId);\n\n\t\t// > for other goals in the source list (except for unassigned list), if index is greater, subtract it by 1\n\t\t// > for other goals in the destination list (except for unassigned list), if index is greater, increase it by 1\n\n\t\tfor (const item in items) {\n\t\t\tconst goal = items[item];\n\t\t\tif (goal.dropId !== result.draggableId) {\n\t\t\t\tif (source !== destination) {\n\t\t\t\t\tif (source in goal.dayInfo) {\n\t\t\t\t\t\tif (goal.dayInfo[source] > sourceIndex) {\n\t\t\t\t\t\t\tgoal.dayInfo[source]--;\n\t\t\t\t\t\t\tchanges.push(goal.dropId);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (destination in goal.dayInfo) {\n\t\t\t\t\t\tif (goal.dayInfo[destination] >= destinationIndex) {\n\t\t\t\t\t\t\tgoal.dayInfo[destination]++;\n\t\t\t\t\t\t\tchanges.push(goal.dropId);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (source in goal.dayInfo) {\n\t\t\t\t\t\tif (goal.dayInfo[source] < sourceIndex && goal.dayInfo[source] >= destinationIndex) {\n\t\t\t\t\t\t\tgoal.dayInfo[source]++;\n\t\t\t\t\t\t\tchanges.push(goal.dropId);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (goal.dayInfo[source] > sourceIndex && goal.dayInfo[source] <= destinationIndex) {\n\t\t\t\t\t\t\tgoal.dayInfo[source]--;\n\t\t\t\t\t\t\tchanges.push(goal.dropId);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tsetGoalsDisplay(items);\n\n\t\t\t// \tlet dropIds = Array.from(updatedDropIds);\n\t\t\t// \tfor (const change in changes) {\n\t\t\t// \t\tif (!dropIds.includes(changes[change])) {\n\t\t\t// \t\t\tdropIds.push(changes[change]);\n\t\t\t// \t\t}\n\t\t\t// \t\tsetUpdatedDropIds(dropIds);\n\t\t\t// \t}\n\t\t\t// }\n\n\t\t\t/*\n\t\tto keep track of changes:\n\t\tcreate state array of updated dropId's --> updatedDropIds\n\t\t*/\n\t\t}\n\n\t\t/*\n\tON SAVE:\n\t*/\n\t\t// const onSave = async function () {\n\t\t// \t// updates will contain the object to be passed into the update PUT request\n\t\t// \t// ids array will be used to check if object for that id has already been created or not\n\t\t// \tlet updates = [];\n\t\t// \tconst ids = [];\n\t\t// \tfor (const item in updatedDropIds) {\n\t\t// \t\tconst dropId = updatedDropIds[item];\n\t\t// \t\tconst subIdIndex = dropId.indexOf('_') + 1;\n\t\t// \t\tconst subId = dropId.slice(subIdIndex);\n\t\t// \t\tconst id = dropId.slice(0, subIdIndex - 1);\n\n\t\t// \t\tconst updatedGoal = goalsDisplay.filter((goal) => goal.dropId === dropId);\n\t\t// \t\tconst newData = updatedGoal[0].dayInfo;\n\n\t\t// \t\tif (!ids.includes(id)) {\n\t\t// \t\t\t// console.log('NEW UPDATE DATA');\n\t\t// \t\t\tconst originalGoal = goalsList.filter((goal) => goal._id === id);\n\t\t// \t\t\tconst days = originalGoal[0].days;\n\t\t// \t\t\tdays[subId] = newData;\n\n\t\t// \t\t\tconst updateData = {\n\t\t// \t\t\t\tid: id,\n\t\t// \t\t\t\tdays: days,\n\t\t// \t\t\t};\n\n\t\t// \t\t\tupdates.push(updateData);\n\t\t// \t\t\tids.push(id);\n\t\t// \t\t} else {\n\t\t// \t\t\tconst index = ids.indexOf(id);\n\t\t// \t\t\tupdates[index].days[subId] = newData;\n\t\t// \t\t}\n\t\t// \t}\n\t\t// \tconsole.log(updates);\n\n\t\t// \tlet requests = [];\n\n\t\t// \tfor (const update in updates) {\n\t\t// \t\tconst updateId = updates[update].id;\n\t\t// \t\tconst updateData = { days: updates[update].days };\n\t\t// \t\tconst request = axios({\n\t\t// \t\t\tmethod: 'put',\n\t\t// \t\t\turl: `http://localhost:10000/goals/${updateId}`,\n\t\t// \t\t\tdata: updateData,\n\t\t// \t\t});\n\t\t// \t\trequests.push(request);\n\t\t// \t}\n\t\t// \tPromise.all(requests)\n\t\t// \t\t.then((values) => console.log(values))\n\t\t// \t\t.catch((err) => console.log(err));\n\t\t// };\n\n\t\t// > obtain the number after _ in dayId\n\t\t// >> let _ = dayId.indexOf(_)\n\t\t// >> let subId = dayId.slice(_)\n\t\t// > update parent data goalsList.days[subId] = goal.dayInfo\n\t\t// ...\n\t\t// ON SAVE: if goal has changed, update via axios.put\n\n\t\treturn (\n\t\t\t<div className={Style.page}>\n\t\t\t\t<div className={Style.scheduler}>\n\t\t\t\t\t{loaded && (\n\t\t\t\t\t\t<DragDropContext onDragEnd={handleOnDragEnd}>\n\t\t\t\t\t\t\t<section className={Style.unassignedGoals}>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<Droppable droppableId='unassigned'>\n\t\t\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t\t\t<ul\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='unassigned'\n\t\t\t\t\t\t\t\t\t\t\t\t{...provided.droppableProps}\n\t\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}>\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>Goals</h3>\n\t\t\t\t\t\t\t\t\t\t\t\t<p>Drag goals to desired day, then click save.</p>\n\t\t\t\t\t\t\t\t\t\t\t\t{goalsList\n\t\t\t\t\t\t\t\t\t\t\t\t\t.filter((goal) => goal.day === 'unassigned')\n\t\t\t\t\t\t\t\t\t\t\t\t\t.map((goal, index) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Draggable key={goal._id} draggableId={goal._id} index={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.dragHandleProps}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<SchedulerGoalBlock\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgoal={goal}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcategory={allCategories.filter(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(cat) => cat.name === goal.category\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Draggable>\n\t\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</Droppable>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t\t<section className={Style.week}>\n\t\t\t\t\t\t\t\t<div className={Style.day}>\n\t\t\t\t\t\t\t\t\t<Droppable droppableId='Monday'>\n\t\t\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t\t\t<ul className='Monday' {...provided.droppableProps} ref={provided.innerRef}>\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>Monday</h3>\n\t\t\t\t\t\t\t\t\t\t\t\t{goalsList\n\t\t\t\t\t\t\t\t\t\t\t\t\t.filter((goal) => goal.day === 'Monday')\n\t\t\t\t\t\t\t\t\t\t\t\t\t.sort((a, b) => a.dayInfo.monday - b.dayInfo.monday)\n\t\t\t\t\t\t\t\t\t\t\t\t\t.map((goal, index) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Draggable key={goal._id} draggableId={goal._id} index={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.dragHandleProps}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<SchedulerGoalBlock\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgoal={goal}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcategory={allCategories.filter(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(cat) => cat.name === goal.category\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Draggable>\n\t\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</Droppable>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className={Style.day}>\n\t\t\t\t\t\t\t\t\t<Droppable droppableId='Tuesday'>\n\t\t\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t\t\t<ul\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='Tuesday'\n\t\t\t\t\t\t\t\t\t\t\t\t{...provided.droppableProps}\n\t\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}>\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>Tuesday</h3>\n\t\t\t\t\t\t\t\t\t\t\t\t{goalsList\n\t\t\t\t\t\t\t\t\t\t\t\t\t.filter((goal) => goal.day === 'Tuesday')\n\t\t\t\t\t\t\t\t\t\t\t\t\t.sort((a, b) => a.dayInfo.tuesday - b.dayInfo.tuesday)\n\t\t\t\t\t\t\t\t\t\t\t\t\t.map((goal, index) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Draggable key={goal._id} draggableId={goal._id} index={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.dragHandleProps}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<SchedulerGoalBlock\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgoal={goal}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcategory={allCategories.filter(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(cat) => cat.name === goal.category\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Draggable>\n\t\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</Droppable>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className={Style.day}>\n\t\t\t\t\t\t\t\t\t<Droppable droppableId='Wednesday'>\n\t\t\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t\t\t<ul\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='Wednesday'\n\t\t\t\t\t\t\t\t\t\t\t\t{...provided.droppableProps}\n\t\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}>\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>Wednesday</h3>\n\t\t\t\t\t\t\t\t\t\t\t\t{goalsList\n\t\t\t\t\t\t\t\t\t\t\t\t\t.filter((goal) => goal.day === 'Wednesday')\n\t\t\t\t\t\t\t\t\t\t\t\t\t.sort((a, b) => a.dayInfo.wednesday - b.dayInfo.wednesday)\n\t\t\t\t\t\t\t\t\t\t\t\t\t.map((goal, index) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Draggable key={goal._id} draggableId={goal._id} index={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.dragHandleProps}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<SchedulerGoalBlock\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgoal={goal}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcategory={allCategories.filter(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(cat) => cat.name === goal.category\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Draggable>\n\t\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</Droppable>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className={Style.day}>\n\t\t\t\t\t\t\t\t\t<Droppable droppableId='Thursday'>\n\t\t\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t\t\t<ul\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='Thursday'\n\t\t\t\t\t\t\t\t\t\t\t\t{...provided.droppableProps}\n\t\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}>\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>Thursday</h3>\n\t\t\t\t\t\t\t\t\t\t\t\t{goalsList\n\t\t\t\t\t\t\t\t\t\t\t\t\t.filter((goal) => goal.day === 'Thursday')\n\t\t\t\t\t\t\t\t\t\t\t\t\t.sort((a, b) => a.dayInfo.thursday - b.dayInfo.thursday)\n\t\t\t\t\t\t\t\t\t\t\t\t\t.map((goal, index) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Draggable key={goal._id} draggableId={goal._id} index={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.dragHandleProps}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<SchedulerGoalBlock\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgoal={goal}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcategory={allCategories.filter(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(cat) => cat.name === goal.category\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Draggable>\n\t\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</Droppable>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className={Style.day}>\n\t\t\t\t\t\t\t\t\t<Droppable droppableId='Friday'>\n\t\t\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t\t\t<ul className='Friday' {...provided.droppableProps} ref={provided.innerRef}>\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>Friday</h3>\n\t\t\t\t\t\t\t\t\t\t\t\t{goalsList\n\t\t\t\t\t\t\t\t\t\t\t\t\t.filter((goal) => goal.day === 'Friday')\n\t\t\t\t\t\t\t\t\t\t\t\t\t.sort((a, b) => a.dayInfo.friday - b.dayInfo.friday)\n\t\t\t\t\t\t\t\t\t\t\t\t\t.map((goal, index) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Draggable key={goal._id} draggableId={goal._id} index={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.dragHandleProps}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<SchedulerGoalBlock\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgoal={goal}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcategory={allCategories.filter(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(cat) => cat.name === goal.category\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Draggable>\n\t\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</Droppable>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className={Style.day}>\n\t\t\t\t\t\t\t\t\t<Droppable droppableId='Saturday'>\n\t\t\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t\t\t<ul\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='Saturday'\n\t\t\t\t\t\t\t\t\t\t\t\t{...provided.droppableProps}\n\t\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}>\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>Saturday</h3>\n\t\t\t\t\t\t\t\t\t\t\t\t{goalsList\n\t\t\t\t\t\t\t\t\t\t\t\t\t.filter((goal) => goal.day === 'Saturday')\n\t\t\t\t\t\t\t\t\t\t\t\t\t.sort((a, b) => a.dayInfo.saturday - b.dayInfo.saturday)\n\t\t\t\t\t\t\t\t\t\t\t\t\t.map((goal, index) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Draggable key={goal._id} draggableId={goal._id} index={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.dragHandleProps}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<SchedulerGoalBlock\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgoal={goal}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcategory={allCategories.filter(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(cat) => cat.name === goal.category\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Draggable>\n\t\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</Droppable>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className={Style.day}>\n\t\t\t\t\t\t\t\t\t<Droppable droppableId='Sunday'>\n\t\t\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t\t\t<ul className='Sunday' {...provided.droppableProps} ref={provided.innerRef}>\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>Sunday</h3>\n\t\t\t\t\t\t\t\t\t\t\t\t{goalsList\n\t\t\t\t\t\t\t\t\t\t\t\t\t.filter((goal) => goal.day === 'Sunday')\n\t\t\t\t\t\t\t\t\t\t\t\t\t.sort((a, b) => a.dayInfo.sunday - b.dayInfo.sunday)\n\t\t\t\t\t\t\t\t\t\t\t\t\t.map((goal, index) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Draggable key={goal._id} draggableId={goal._id} index={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.dragHandleProps}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<SchedulerGoalBlock\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgoal={goal}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcategory={allCategories.filter(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(cat) => cat.name === goal.category\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Draggable>\n\t\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</Droppable>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t</DragDropContext>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t<button onClick={onSave} className={Style.saveButton}>\n\t\t\t\t\tSAVE\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t);\n\t}\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,eAAT,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,qBAAtD;AAEA,SAASC,kBAAT,QAAmC,YAAnC;;AAEA,eAAe,SAASC,SAAT,GAAqB;EAAA;;EACnC;EACA;EACA,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,EAAD,CAAlD;EACA,MAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,EAAD,CAA5C;;EAEA,eAAec,QAAf,GAA0B;IACzB,IAAI;MACH,MAAMC,UAAU,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAU,iCAAV,CAAzB;MACA,MAAMC,KAAK,GAAG,MAAMhB,KAAK,CAACe,GAAN,CAAU,8BAAV,CAApB;MACAE,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,IAAlB;MAEAT,gBAAgB,CAACI,UAAU,CAACK,IAAZ,CAAhB;MACAX,YAAY,CAACQ,KAAK,CAACG,IAAP,CAAZ;IACA,CAPD,CAOE,OAAOC,CAAP,EAAU;MACXH,OAAO,CAACC,GAAR,CAAYE,CAAZ;IACA;EACD,CAlBkC,CAoBnC;;;EACA,IAAIC,UAAU,GAAGZ,aAAa,CAACa,MAAd,KAAyB,CAAzB,IAA8Bf,SAAS,CAACe,MAAV,KAAqB,CAApE,CArBmC,CAsBnC;;EACA,IAAID,UAAJ,EAAgB;IACfR,QAAQ;EACR,CAzBkC,CA2BnC;EACA;;;EACA,IAAIU,MAAM,GAAGd,aAAa,CAACa,MAAd,KAAyB,CAAzB,IAA8Bf,SAAS,CAACe,MAAV,KAAqB,CAAhE;;EAEA,SAASE,eAAT,CAAyBC,MAAzB,EAAiC;IAChC,IAAI,CAACA,MAAM,CAACC,WAAZ,EAAyB;IACzBT,OAAO,CAACC,GAAR,CAAYO,MAAZ;IAEA,IAAIE,OAAO,GAAG,EAAd;IAEA,MAAMC,MAAM,GAAGH,MAAM,CAACG,MAAP,CAAcC,WAA7B;IACA,MAAMC,WAAW,GAAGL,MAAM,CAACG,MAAP,CAAcG,KAAlC;IACA,MAAML,WAAW,GAAGD,MAAM,CAACC,WAAP,CAAmBG,WAAvC;IACA,MAAMG,gBAAgB,GAAGP,MAAM,CAACC,WAAP,CAAmBK,KAA5C,CATgC,CAWhC;;IACA,MAAME,KAAK,GAAGC,KAAK,CAACC,IAAN,CAAW5B,SAAX,CAAd;IACA,MAAMwB,KAAK,GAAGE,KAAK,CAACG,SAAN,CAAiBC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAab,MAAM,CAACc,WAA9C,CAAd;IAEA,IAAIC,MAAM,GAAG,EAAb;IACAA,MAAM,CAACd,WAAD,CAAN,GAAsBM,gBAAtB;IACAC,KAAK,CAACF,KAAD,CAAL,CAAaU,OAAb,GAAuBD,MAAvB;IAEAb,OAAO,CAACe,IAAR,CAAajB,MAAM,CAACc,WAApB,EAnBgC,CAqBhC;IACA;;IAEA,KAAK,MAAMI,IAAX,IAAmBV,KAAnB,EAA0B;MACzB,MAAMI,IAAI,GAAGJ,KAAK,CAACU,IAAD,CAAlB;;MACA,IAAIN,IAAI,CAACO,MAAL,KAAgBnB,MAAM,CAACc,WAA3B,EAAwC;QACvC,IAAIX,MAAM,KAAKF,WAAf,EAA4B;UAC3B,IAAIE,MAAM,IAAIS,IAAI,CAACI,OAAnB,EAA4B;YAC3B,IAAIJ,IAAI,CAACI,OAAL,CAAab,MAAb,IAAuBE,WAA3B,EAAwC;cACvCO,IAAI,CAACI,OAAL,CAAab,MAAb;cACAD,OAAO,CAACe,IAAR,CAAaL,IAAI,CAACO,MAAlB;YACA;UACD;;UACD,IAAIlB,WAAW,IAAIW,IAAI,CAACI,OAAxB,EAAiC;YAChC,IAAIJ,IAAI,CAACI,OAAL,CAAaf,WAAb,KAA6BM,gBAAjC,EAAmD;cAClDK,IAAI,CAACI,OAAL,CAAaf,WAAb;cACAC,OAAO,CAACe,IAAR,CAAaL,IAAI,CAACO,MAAlB;YACA;UACD;QACD,CAbD,MAaO;UACN,IAAIhB,MAAM,IAAIS,IAAI,CAACI,OAAnB,EAA4B;YAC3B,IAAIJ,IAAI,CAACI,OAAL,CAAab,MAAb,IAAuBE,WAAvB,IAAsCO,IAAI,CAACI,OAAL,CAAab,MAAb,KAAwBI,gBAAlE,EAAoF;cACnFK,IAAI,CAACI,OAAL,CAAab,MAAb;cACAD,OAAO,CAACe,IAAR,CAAaL,IAAI,CAACO,MAAlB;YACA;;YACD,IAAIP,IAAI,CAACI,OAAL,CAAab,MAAb,IAAuBE,WAAvB,IAAsCO,IAAI,CAACI,OAAL,CAAab,MAAb,KAAwBI,gBAAlE,EAAoF;cACnFK,IAAI,CAACI,OAAL,CAAab,MAAb;cACAD,OAAO,CAACe,IAAR,CAAaL,IAAI,CAACO,MAAlB;YACA;UACD;QACD;MACD;;MACDC,eAAe,CAACZ,KAAD,CAAf,CA7ByB,CA+BzB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;AACH;AACA;AACA;IACG;IAED;AACF;AACA;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IAEA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;;;IAEA,oBACC;MAAK,SAAS,EAAEhC,KAAK,CAAC6C,IAAtB;MAAA,wBACC;QAAK,SAAS,EAAE7C,KAAK,CAAC8C,SAAtB;QAAA,UACExB,MAAM,iBACN,QAAC,eAAD;UAAiB,SAAS,EAAEC,eAA5B;UAAA,wBACC;YAAS,SAAS,EAAEvB,KAAK,CAAC+C,eAA1B;YAAA,uBACC;cAAA,uBACC,QAAC,SAAD;gBAAW,WAAW,EAAC,YAAvB;gBAAA,UACGC,QAAD,iBACA;kBACC,SAAS,EAAC,YADX;kBAAA,GAEKA,QAAQ,CAACC,cAFd;kBAGC,GAAG,EAAED,QAAQ,CAACE,QAHf;kBAAA,wBAIC;oBAAA;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QAJD,eAKC;oBAAA;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QALD,EAME5C,SAAS,CACR6C,MADD,CACSf,IAAD,IAAUA,IAAI,CAACgB,GAAL,KAAa,YAD/B,EAECC,GAFD,CAEK,CAACjB,IAAD,EAAON,KAAP,kBACJ,QAAC,SAAD;oBAA0B,WAAW,EAAEM,IAAI,CAACC,GAA5C;oBAAiD,KAAK,EAAEP,KAAxD;oBAAA,UACGkB,QAAD,iBACA;sBACC,GAAG,EAAEA,QAAQ,CAACE,QADf;sBAAA,GAEKF,QAAQ,CAACM,cAFd;sBAAA,GAGKN,QAAQ,CAACO,eAHd;sBAAA,uBAIC,QAAC,kBAAD;wBACC,IAAI,EAAEnB,IADP;wBAEC,QAAQ,EAAE5B,aAAa,CAAC2C,MAAd,CACRK,GAAD,IAASA,GAAG,CAACC,IAAJ,KAAarB,IAAI,CAACsB,QADlB;sBAFX;wBAAA;wBAAA;wBAAA;sBAAA;oBAJD;sBAAA;sBAAA;sBAAA;oBAAA;kBAFF,GAAgBtB,IAAI,CAACC,GAArB;oBAAA;oBAAA;oBAAA;kBAAA,QAHD,CANF,EAyBEW,QAAQ,CAACW,WAzBX;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA;cAFF;gBAAA;gBAAA;gBAAA;cAAA;YADD;cAAA;cAAA;cAAA;YAAA;UADD;YAAA;YAAA;YAAA;UAAA,QADD,eAoCC;YAAS,SAAS,EAAE3D,KAAK,CAAC4D,IAA1B;YAAA,wBACC;cAAK,SAAS,EAAE5D,KAAK,CAACoD,GAAtB;cAAA,uBACC,QAAC,SAAD;gBAAW,WAAW,EAAC,QAAvB;gBAAA,UACGJ,QAAD,iBACA;kBAAI,SAAS,EAAC,QAAd;kBAAA,GAA2BA,QAAQ,CAACC,cAApC;kBAAoD,GAAG,EAAED,QAAQ,CAACE,QAAlE;kBAAA,wBACC;oBAAA;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QADD,EAEE5C,SAAS,CACR6C,MADD,CACSf,IAAD,IAAUA,IAAI,CAACgB,GAAL,KAAa,QAD/B,EAECS,IAFD,CAEM,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACtB,OAAF,CAAUwB,MAAV,GAAmBD,CAAC,CAACvB,OAAF,CAAUwB,MAF7C,EAGCX,GAHD,CAGK,CAACjB,IAAD,EAAON,KAAP,kBACJ,QAAC,SAAD;oBAA0B,WAAW,EAAEM,IAAI,CAACC,GAA5C;oBAAiD,KAAK,EAAEP,KAAxD;oBAAA,UACGkB,QAAD,iBACA;sBACC,GAAG,EAAEA,QAAQ,CAACE,QADf;sBAAA,GAEKF,QAAQ,CAACM,cAFd;sBAAA,GAGKN,QAAQ,CAACO,eAHd;sBAAA,uBAIC,QAAC,kBAAD;wBACC,IAAI,EAAEnB,IADP;wBAEC,QAAQ,EAAE5B,aAAa,CAAC2C,MAAd,CACRK,GAAD,IAASA,GAAG,CAACC,IAAJ,KAAarB,IAAI,CAACsB,QADlB;sBAFX;wBAAA;wBAAA;wBAAA;sBAAA;oBAJD;sBAAA;sBAAA;sBAAA;oBAAA;kBAFF,GAAgBtB,IAAI,CAACC,GAArB;oBAAA;oBAAA;oBAAA;kBAAA,QAJD,CAFF,EAsBEW,QAAQ,CAACW,WAtBX;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA;cAFF;gBAAA;gBAAA;gBAAA;cAAA;YADD;cAAA;cAAA;cAAA;YAAA,QADD,eA+BC;cAAK,SAAS,EAAE3D,KAAK,CAACoD,GAAtB;cAAA,uBACC,QAAC,SAAD;gBAAW,WAAW,EAAC,SAAvB;gBAAA,UACGJ,QAAD,iBACA;kBACC,SAAS,EAAC,SADX;kBAAA,GAEKA,QAAQ,CAACC,cAFd;kBAGC,GAAG,EAAED,QAAQ,CAACE,QAHf;kBAAA,wBAIC;oBAAA;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QAJD,EAKE5C,SAAS,CACR6C,MADD,CACSf,IAAD,IAAUA,IAAI,CAACgB,GAAL,KAAa,SAD/B,EAECS,IAFD,CAEM,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACtB,OAAF,CAAUyB,OAAV,GAAoBF,CAAC,CAACvB,OAAF,CAAUyB,OAF9C,EAGCZ,GAHD,CAGK,CAACjB,IAAD,EAAON,KAAP,kBACJ,QAAC,SAAD;oBAA0B,WAAW,EAAEM,IAAI,CAACC,GAA5C;oBAAiD,KAAK,EAAEP,KAAxD;oBAAA,UACGkB,QAAD,iBACA;sBACC,GAAG,EAAEA,QAAQ,CAACE,QADf;sBAAA,GAEKF,QAAQ,CAACM,cAFd;sBAAA,GAGKN,QAAQ,CAACO,eAHd;sBAAA,uBAIC,QAAC,kBAAD;wBACC,IAAI,EAAEnB,IADP;wBAEC,QAAQ,EAAE5B,aAAa,CAAC2C,MAAd,CACRK,GAAD,IAASA,GAAG,CAACC,IAAJ,KAAarB,IAAI,CAACsB,QADlB;sBAFX;wBAAA;wBAAA;wBAAA;sBAAA;oBAJD;sBAAA;sBAAA;sBAAA;oBAAA;kBAFF,GAAgBtB,IAAI,CAACC,GAArB;oBAAA;oBAAA;oBAAA;kBAAA,QAJD,CALF,EAyBEW,QAAQ,CAACW,WAzBX;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA;cAFF;gBAAA;gBAAA;gBAAA;cAAA;YADD;cAAA;cAAA;cAAA;YAAA,QA/BD,eAgEC;cAAK,SAAS,EAAE3D,KAAK,CAACoD,GAAtB;cAAA,uBACC,QAAC,SAAD;gBAAW,WAAW,EAAC,WAAvB;gBAAA,UACGJ,QAAD,iBACA;kBACC,SAAS,EAAC,WADX;kBAAA,GAEKA,QAAQ,CAACC,cAFd;kBAGC,GAAG,EAAED,QAAQ,CAACE,QAHf;kBAAA,wBAIC;oBAAA;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QAJD,EAKE5C,SAAS,CACR6C,MADD,CACSf,IAAD,IAAUA,IAAI,CAACgB,GAAL,KAAa,WAD/B,EAECS,IAFD,CAEM,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACtB,OAAF,CAAU0B,SAAV,GAAsBH,CAAC,CAACvB,OAAF,CAAU0B,SAFhD,EAGCb,GAHD,CAGK,CAACjB,IAAD,EAAON,KAAP,kBACJ,QAAC,SAAD;oBAA0B,WAAW,EAAEM,IAAI,CAACC,GAA5C;oBAAiD,KAAK,EAAEP,KAAxD;oBAAA,UACGkB,QAAD,iBACA;sBACC,GAAG,EAAEA,QAAQ,CAACE,QADf;sBAAA,GAEKF,QAAQ,CAACM,cAFd;sBAAA,GAGKN,QAAQ,CAACO,eAHd;sBAAA,uBAIC,QAAC,kBAAD;wBACC,IAAI,EAAEnB,IADP;wBAEC,QAAQ,EAAE5B,aAAa,CAAC2C,MAAd,CACRK,GAAD,IAASA,GAAG,CAACC,IAAJ,KAAarB,IAAI,CAACsB,QADlB;sBAFX;wBAAA;wBAAA;wBAAA;sBAAA;oBAJD;sBAAA;sBAAA;sBAAA;oBAAA;kBAFF,GAAgBtB,IAAI,CAACC,GAArB;oBAAA;oBAAA;oBAAA;kBAAA,QAJD,CALF,EAyBEW,QAAQ,CAACW,WAzBX;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA;cAFF;gBAAA;gBAAA;gBAAA;cAAA;YADD;cAAA;cAAA;cAAA;YAAA,QAhED,eAiGC;cAAK,SAAS,EAAE3D,KAAK,CAACoD,GAAtB;cAAA,uBACC,QAAC,SAAD;gBAAW,WAAW,EAAC,UAAvB;gBAAA,UACGJ,QAAD,iBACA;kBACC,SAAS,EAAC,UADX;kBAAA,GAEKA,QAAQ,CAACC,cAFd;kBAGC,GAAG,EAAED,QAAQ,CAACE,QAHf;kBAAA,wBAIC;oBAAA;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QAJD,EAKE5C,SAAS,CACR6C,MADD,CACSf,IAAD,IAAUA,IAAI,CAACgB,GAAL,KAAa,UAD/B,EAECS,IAFD,CAEM,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACtB,OAAF,CAAU2B,QAAV,GAAqBJ,CAAC,CAACvB,OAAF,CAAU2B,QAF/C,EAGCd,GAHD,CAGK,CAACjB,IAAD,EAAON,KAAP,kBACJ,QAAC,SAAD;oBAA0B,WAAW,EAAEM,IAAI,CAACC,GAA5C;oBAAiD,KAAK,EAAEP,KAAxD;oBAAA,UACGkB,QAAD,iBACA;sBACC,GAAG,EAAEA,QAAQ,CAACE,QADf;sBAAA,GAEKF,QAAQ,CAACM,cAFd;sBAAA,GAGKN,QAAQ,CAACO,eAHd;sBAAA,uBAIC,QAAC,kBAAD;wBACC,IAAI,EAAEnB,IADP;wBAEC,QAAQ,EAAE5B,aAAa,CAAC2C,MAAd,CACRK,GAAD,IAASA,GAAG,CAACC,IAAJ,KAAarB,IAAI,CAACsB,QADlB;sBAFX;wBAAA;wBAAA;wBAAA;sBAAA;oBAJD;sBAAA;sBAAA;sBAAA;oBAAA;kBAFF,GAAgBtB,IAAI,CAACC,GAArB;oBAAA;oBAAA;oBAAA;kBAAA,QAJD,CALF,EAyBEW,QAAQ,CAACW,WAzBX;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA;cAFF;gBAAA;gBAAA;gBAAA;cAAA;YADD;cAAA;cAAA;cAAA;YAAA,QAjGD,eAkIC;cAAK,SAAS,EAAE3D,KAAK,CAACoD,GAAtB;cAAA,uBACC,QAAC,SAAD;gBAAW,WAAW,EAAC,QAAvB;gBAAA,UACGJ,QAAD,iBACA;kBAAI,SAAS,EAAC,QAAd;kBAAA,GAA2BA,QAAQ,CAACC,cAApC;kBAAoD,GAAG,EAAED,QAAQ,CAACE,QAAlE;kBAAA,wBACC;oBAAA;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QADD,EAEE5C,SAAS,CACR6C,MADD,CACSf,IAAD,IAAUA,IAAI,CAACgB,GAAL,KAAa,QAD/B,EAECS,IAFD,CAEM,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACtB,OAAF,CAAU4B,MAAV,GAAmBL,CAAC,CAACvB,OAAF,CAAU4B,MAF7C,EAGCf,GAHD,CAGK,CAACjB,IAAD,EAAON,KAAP,kBACJ,QAAC,SAAD;oBAA0B,WAAW,EAAEM,IAAI,CAACC,GAA5C;oBAAiD,KAAK,EAAEP,KAAxD;oBAAA,UACGkB,QAAD,iBACA;sBACC,GAAG,EAAEA,QAAQ,CAACE,QADf;sBAAA,GAEKF,QAAQ,CAACM,cAFd;sBAAA,GAGKN,QAAQ,CAACO,eAHd;sBAAA,uBAIC,QAAC,kBAAD;wBACC,IAAI,EAAEnB,IADP;wBAEC,QAAQ,EAAE5B,aAAa,CAAC2C,MAAd,CACRK,GAAD,IAASA,GAAG,CAACC,IAAJ,KAAarB,IAAI,CAACsB,QADlB;sBAFX;wBAAA;wBAAA;wBAAA;sBAAA;oBAJD;sBAAA;sBAAA;sBAAA;oBAAA;kBAFF,GAAgBtB,IAAI,CAACC,GAArB;oBAAA;oBAAA;oBAAA;kBAAA,QAJD,CAFF,EAsBEW,QAAQ,CAACW,WAtBX;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA;cAFF;gBAAA;gBAAA;gBAAA;cAAA;YADD;cAAA;cAAA;cAAA;YAAA,QAlID,eAgKC;cAAK,SAAS,EAAE3D,KAAK,CAACoD,GAAtB;cAAA,uBACC,QAAC,SAAD;gBAAW,WAAW,EAAC,UAAvB;gBAAA,UACGJ,QAAD,iBACA;kBACC,SAAS,EAAC,UADX;kBAAA,GAEKA,QAAQ,CAACC,cAFd;kBAGC,GAAG,EAAED,QAAQ,CAACE,QAHf;kBAAA,wBAIC;oBAAA;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QAJD,EAKE5C,SAAS,CACR6C,MADD,CACSf,IAAD,IAAUA,IAAI,CAACgB,GAAL,KAAa,UAD/B,EAECS,IAFD,CAEM,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACtB,OAAF,CAAU6B,QAAV,GAAqBN,CAAC,CAACvB,OAAF,CAAU6B,QAF/C,EAGChB,GAHD,CAGK,CAACjB,IAAD,EAAON,KAAP,kBACJ,QAAC,SAAD;oBAA0B,WAAW,EAAEM,IAAI,CAACC,GAA5C;oBAAiD,KAAK,EAAEP,KAAxD;oBAAA,UACGkB,QAAD,iBACA;sBACC,GAAG,EAAEA,QAAQ,CAACE,QADf;sBAAA,GAEKF,QAAQ,CAACM,cAFd;sBAAA,GAGKN,QAAQ,CAACO,eAHd;sBAAA,uBAIC,QAAC,kBAAD;wBACC,IAAI,EAAEnB,IADP;wBAEC,QAAQ,EAAE5B,aAAa,CAAC2C,MAAd,CACRK,GAAD,IAASA,GAAG,CAACC,IAAJ,KAAarB,IAAI,CAACsB,QADlB;sBAFX;wBAAA;wBAAA;wBAAA;sBAAA;oBAJD;sBAAA;sBAAA;sBAAA;oBAAA;kBAFF,GAAgBtB,IAAI,CAACC,GAArB;oBAAA;oBAAA;oBAAA;kBAAA,QAJD,CALF,EAyBEW,QAAQ,CAACW,WAzBX;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA;cAFF;gBAAA;gBAAA;gBAAA;cAAA;YADD;cAAA;cAAA;cAAA;YAAA,QAhKD,eAiMC;cAAK,SAAS,EAAE3D,KAAK,CAACoD,GAAtB;cAAA,uBACC,QAAC,SAAD;gBAAW,WAAW,EAAC,QAAvB;gBAAA,UACGJ,QAAD,iBACA;kBAAI,SAAS,EAAC,QAAd;kBAAA,GAA2BA,QAAQ,CAACC,cAApC;kBAAoD,GAAG,EAAED,QAAQ,CAACE,QAAlE;kBAAA,wBACC;oBAAA;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QADD,EAEE5C,SAAS,CACR6C,MADD,CACSf,IAAD,IAAUA,IAAI,CAACgB,GAAL,KAAa,QAD/B,EAECS,IAFD,CAEM,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACtB,OAAF,CAAU8B,MAAV,GAAmBP,CAAC,CAACvB,OAAF,CAAU8B,MAF7C,EAGCjB,GAHD,CAGK,CAACjB,IAAD,EAAON,KAAP,kBACJ,QAAC,SAAD;oBAA0B,WAAW,EAAEM,IAAI,CAACC,GAA5C;oBAAiD,KAAK,EAAEP,KAAxD;oBAAA,UACGkB,QAAD,iBACA;sBACC,GAAG,EAAEA,QAAQ,CAACE,QADf;sBAAA,GAEKF,QAAQ,CAACM,cAFd;sBAAA,GAGKN,QAAQ,CAACO,eAHd;sBAAA,uBAIC,QAAC,kBAAD;wBACC,IAAI,EAAEnB,IADP;wBAEC,QAAQ,EAAE5B,aAAa,CAAC2C,MAAd,CACRK,GAAD,IAASA,GAAG,CAACC,IAAJ,KAAarB,IAAI,CAACsB,QADlB;sBAFX;wBAAA;wBAAA;wBAAA;sBAAA;oBAJD;sBAAA;sBAAA;sBAAA;oBAAA;kBAFF,GAAgBtB,IAAI,CAACC,GAArB;oBAAA;oBAAA;oBAAA;kBAAA,QAJD,CAFF,EAsBEW,QAAQ,CAACW,WAtBX;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA;cAFF;gBAAA;gBAAA;gBAAA;cAAA;YADD;cAAA;cAAA;cAAA;YAAA,QAjMD;UAAA;YAAA;YAAA;YAAA;UAAA,QApCD;QAAA;UAAA;UAAA;UAAA;QAAA;MAFF;QAAA;QAAA;QAAA;MAAA,QADD,eA0QC;QAAQ,OAAO,EAAEY,MAAjB;QAAyB,SAAS,EAAEvE,KAAK,CAACwE,UAA1C;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QA1QD;IAAA;MAAA;MAAA;MAAA;IAAA,QADD;EAgRA;AACD;;GAnbuBnE,S;;KAAAA,S"},"metadata":{},"sourceType":"module"}