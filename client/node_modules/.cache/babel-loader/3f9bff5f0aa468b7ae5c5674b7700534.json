{"ast":null,"code":"var _jsxFileName = \"/Users/daltonsteele/Coding/weekly-goals-app/client/src/components/presentational/homeWeekDisplay/HomeWeekDisplay.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Style from './homeWeekDisplay.module.scss';\nimport { Checkbox, Button } from '@mui/material';\nimport { ThemeProvider } from '@mui/material/styles';\nimport theme from '../../../theme.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HomeWeekDisplay() {\n  _s();\n\n  const [goalsList, setGoalsList] = useState([]);\n  const [allCategories, setAllCategories] = useState([]);\n  const [resetConfirmation, setResetConfirmation] = useState(false);\n\n  async function getGoals() {\n    try {\n      const categories = await axios.get('http://localhost:10000/category');\n      const goals = await axios.get('http://localhost:10000/goals');\n      console.log(goals.data);\n      console.log(categories.data);\n      setAllCategories(categories.data);\n      setGoalsList(goals.data);\n    } catch (e) {\n      console.log(e);\n    }\n  } // this will run the axios request on the first render of the component\n\n\n  if (goalsList.length === 0 && allCategories.length === 0) {\n    getGoals();\n  } // this will be used to make sure that all of the data has been loaded\n  // before returning the page content... returning the child components without the data causes an error\n\n\n  const weekdays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n\n  async function handleCheckbox(e, id) {\n    const checked = e.target.checked;\n    const data = {\n      completed: checked\n    };\n    const response = await axios({\n      method: 'put',\n      url: `http://localhost:10000/goals/${id}`,\n      data: data\n    });\n\n    if (response.status === 200) {\n      let arrayCopy = JSON.parse(JSON.stringify(goalsList));\n      const updated = arrayCopy.map(goal => {\n        if (goal._id === id) {\n          let copy = JSON.parse(JSON.stringify(goal));\n          console.log(copy);\n          copy.completed = checked;\n          console.log(copy);\n          return copy;\n        } else {\n          return goal;\n        }\n      });\n      setGoalsList(updated);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Style.page,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Style.homeWeekDisplay,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: Style.clearAll,\n        children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n          theme: theme,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            size: \"small\",\n            onClick: () => setResetConfirmation(true),\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this), resetConfirmation ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Style.modalContainer,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: Style.modal,\n          children: \"Yo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 6\n      }, this) : '', weekdays.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Style.day,\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: Style.header,\n            children: day\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 8\n          }, this), goalsList.filter(goal => goal.day === day).sort((a, b) => a.dayIndex - b.dayIndex).map((goal, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: Style[`goal${allCategories.filter(cat => cat.name.toLowerCase() === goal.category.toLowerCase())[0].color}`],\n            children: [goal.name, /*#__PURE__*/_jsxDEV(ThemeProvider, {\n              theme: theme,\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                inputProps: {\n                  'aria-label': 'Complete? Y/N'\n                },\n                color: \"light\",\n                onChange: e => handleCheckbox(e, goal._id),\n                checked: goal.completed\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 12\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 11\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 10\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 7\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 6\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 3\n  }, this);\n}\n\n_s(HomeWeekDisplay, \"a21PjDpjgczcq2Is25NRjRJw4Lc=\");\n\n_c = HomeWeekDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeWeekDisplay\");","map":{"version":3,"names":["React","useState","axios","Style","Checkbox","Button","ThemeProvider","theme","HomeWeekDisplay","goalsList","setGoalsList","allCategories","setAllCategories","resetConfirmation","setResetConfirmation","getGoals","categories","get","goals","console","log","data","e","length","weekdays","handleCheckbox","id","checked","target","completed","response","method","url","status","arrayCopy","JSON","parse","stringify","updated","map","goal","_id","copy","page","homeWeekDisplay","clearAll","modalContainer","modal","day","index","header","filter","sort","a","b","dayIndex","cat","name","toLowerCase","category","color"],"sources":["/Users/daltonsteele/Coding/weekly-goals-app/client/src/components/presentational/homeWeekDisplay/HomeWeekDisplay.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport Style from './homeWeekDisplay.module.scss';\n\nimport { Checkbox, Button } from '@mui/material';\nimport { ThemeProvider } from '@mui/material/styles';\nimport theme from '../../../theme.js';\n\nexport default function HomeWeekDisplay() {\n\tconst [goalsList, setGoalsList] = useState([]);\n\tconst [allCategories, setAllCategories] = useState([]);\n\tconst [resetConfirmation, setResetConfirmation] = useState(false);\n\n\tasync function getGoals() {\n\t\ttry {\n\t\t\tconst categories = await axios.get('http://localhost:10000/category');\n\t\t\tconst goals = await axios.get('http://localhost:10000/goals');\n\t\t\tconsole.log(goals.data);\n\t\t\tconsole.log(categories.data);\n\n\t\t\tsetAllCategories(categories.data);\n\t\t\tsetGoalsList(goals.data);\n\t\t} catch (e) {\n\t\t\tconsole.log(e);\n\t\t}\n\t}\n\n\t// this will run the axios request on the first render of the component\n\tif (goalsList.length === 0 && allCategories.length === 0) {\n\t\tgetGoals();\n\t}\n\n\t// this will be used to make sure that all of the data has been loaded\n\t// before returning the page content... returning the child components without the data causes an error\n\n\tconst weekdays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n\n\tasync function handleCheckbox(e, id) {\n\t\tconst checked = e.target.checked;\n\t\tconst data = { completed: checked };\n\t\tconst response = await axios({\n\t\t\tmethod: 'put',\n\t\t\turl: `http://localhost:10000/goals/${id}`,\n\t\t\tdata: data,\n\t\t});\n\t\tif (response.status === 200) {\n\t\t\tlet arrayCopy = JSON.parse(JSON.stringify(goalsList));\n\t\t\tconst updated = arrayCopy.map((goal) => {\n\t\t\t\tif (goal._id === id) {\n\t\t\t\t\tlet copy = JSON.parse(JSON.stringify(goal));\n\t\t\t\t\tconsole.log(copy);\n\t\t\t\t\tcopy.completed = checked;\n\t\t\t\t\tconsole.log(copy);\n\t\t\t\t\treturn copy;\n\t\t\t\t} else {\n\t\t\t\t\treturn goal;\n\t\t\t\t}\n\t\t\t});\n\t\t\tsetGoalsList(updated);\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className={Style.page}>\n\t\t\t<div className={Style.homeWeekDisplay}>\n\t\t\t\t<div className={Style.clearAll}>\n\t\t\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t\t\t<Button variant='outlined' size='small' onClick={() => setResetConfirmation(true)}>\n\t\t\t\t\t\t\tReset\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</ThemeProvider>\n\t\t\t\t</div>\n\t\t\t\t{resetConfirmation ? (\n\t\t\t\t\t<div className={Style.modalContainer}>\n\t\t\t\t\t\t<div className={Style.modal}>Yo</div>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t''\n\t\t\t\t)}\n\t\t\t\t{weekdays.map((day, index) => (\n\t\t\t\t\t<div key={index} className={Style.day}>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<h2 className={Style.header}>{day}</h2>\n\t\t\t\t\t\t\t{goalsList\n\t\t\t\t\t\t\t\t.filter((goal) => goal.day === day)\n\t\t\t\t\t\t\t\t.sort((a, b) => a.dayIndex - b.dayIndex)\n\t\t\t\t\t\t\t\t.map((goal, index) => (\n\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\t\tStyle[\n\t\t\t\t\t\t\t\t\t\t\t\t`goal${\n\t\t\t\t\t\t\t\t\t\t\t\t\tallCategories.filter(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(cat) => cat.name.toLowerCase() === goal.category.toLowerCase()\n\t\t\t\t\t\t\t\t\t\t\t\t\t)[0].color\n\t\t\t\t\t\t\t\t\t\t\t\t}`\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t\t{goal.name}\n\t\t\t\t\t\t\t\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\t\t\tinputProps={{ 'aria-label': 'Complete? Y/N' }}\n\t\t\t\t\t\t\t\t\t\t\t\tcolor='light'\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleCheckbox(e, goal._id)}\n\t\t\t\t\t\t\t\t\t\t\t\tchecked={goal.completed}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</ThemeProvider>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}